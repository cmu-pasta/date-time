Rater	Training?	Testing?	Set 3?	Skipped?	False pos?	Owner	Project	Title	Link	Fix Link	Stars	TF-IDFs	Size	Datetime	Arrow	Pendulum	Description	Category 1	Category 2	Affected Computation 1	Affected Computation 2	Affected Computation 3	Obscurity	Impact/Severity	# LOC	Logic Needed	Comments	BPST1	BPST2	BPST3	Make Benchmark?	Associated Benchmark
	TRUE	FALSE	FALSE	FALSE	FALSE	python-poetry	tomlkit	datetime.utcnow and datetime.utcfromtimestamp are deprecated in Python 3.12	https://github.com/python-poetry/tomlkit/issues/297	https://github.com/python-poetry/tomlkit/commit/3a99b5ba982ae80d7f5ba93805165780c8e326d8	643	1.312623494	1001	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low		Outdated/Deprecated APIs			Yes	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	frictionlessdata	frictionless-py	SpssParser ignores timezones	https://github.com/frictionlessdata/frictionless-py/issues/1212	https://github.com/frictionlessdata/frictionless-py/pull/1431	683	1.270076663	1279	1	0	0		Timezone		Datetime Construction	Replacing/Rounding Datetime Components	Library Conversions	Low	Medium	Medium	Medium		Using Naïve Datetime Incorrectly			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Deepcopy of Month-based Duration produces a different duration	https://github.com/sdispater/pendulum/issues/714	https://github.com/sdispater/pendulum/commit/9590c651c5c5ff3bec064abc7aaf270c0c6f5cee	6109	1.191295129	1014	1	0	1																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	googleapis	python-storage	`DeprecationWarning` warning in build log for python 3.12 `datetime.datetime.utcnow() is deprecated`	https://github.com/googleapis/python-storage/issues/1194	https://github.com/googleapis/python-storage/commit/dbe4bb1e7b80720943197410566b8bd28e2c1b4e	420	1.17635061	10349	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low		Outdated/Deprecated APIs			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	googleapis	python-logging	`DeprecationWarning` warning in build log for python 3.12 `datetime.datetime.utcfromtimestamp() is deprecated`	https://github.com/googleapis/python-logging/issues/818	https://github.com/googleapis/python-logging/pull/824	119	1.167279177	2673	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic-extra-types	Pendulum `DateTime` wrapper losing `tz` and `timezone` values in 2.8.1	https://github.com/pydantic/pydantic-extra-types/issues/188	https://github.com/PrefectHQ/prefect/commit/641c025e5ba5f76df8632226cc81ebadd67317b1	153	1.100985305	1193	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	moinwiki	moin	datetime.utcfromtimestamp() and .utcnow() are deprecated	https://github.com/moinwiki/moin/issues/1675	https://github.com/moinwiki/moin/pull/1677	287	1.08921495	1081	1	0	0		Timezone		Datetime Construction			Low	Low	Medium	Low		Outdated/Deprecated APIs			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	feast-dev	feast	Retire/update the datetime.utcnow() function	https://github.com/feast-dev/feast/issues/4240	https://github.com/feast-dev/feast/pull/4305	5330	1.03551409	1124	1	0	0		Timezone		Delta Construction	Datetime Construction	Delta Arithmetic	Low	Low	Medium	Low		Outdated/Deprecated APIs			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Default timezone isn't utc?	https://github.com/sdispater/pendulum/issues/171	https://github.com/sdispater/pendulum/pull/172	6109	1.024292861	3201	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	googleapis	google-cloud-python	gcloud.datastore.helpers.get_value_from_protobuf() returns naive datetimes	https://github.com/googleapis/google-cloud-python/issues/131	https://github.com/googleapis/google-cloud-python/pull/181	4704	1.016552945	1231	1	0	0																
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	sdispater	pendulum	DateTime.add(duration)	https://github.com/sdispater/pendulum/issues/323	https://github.com/gridsingularity/gsy-e/pull/1463	6109	0.9960230505	1694	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	mverleg	pyjson_tricks	Invalid datetime decoding	https://github.com/mverleg/pyjson_tricks/issues/41	https://github.com/mverleg/pyjson_tricks/commit/3fda9791a8bb39f966ae4e88e9e9555f2646917e	154	0.9651697541	1250	1	0	0																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	TRUE	Bears-R-Us	arkouda	datetime columns in dataframe display bug	https://github.com/Bears-R-Us/arkouda/issues/2596	https://github.com/stress-tess/arkouda/commit/e7eb559ba6de05c33859804b552bc016e964e76c	228	0.9473247674	3315	1	0	0											pretty sure this is a false positive?					
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	last day of the month is wrong??	https://github.com/dateutil/dateutil/issues/1167	https://github.com/dateutil/dateutil/pull/1170	2266	0.9356910032	1093	1	0	0	they expected apr 30 + 1 month = may 31	Date		Datetime Arithmetic			Low	Low	Medium	Medium	INTERESTING	Unintuitive Arithmetic			Yes	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	dateutil	dateutil	last day of the month is wrong??	https://github.com/dateutil/dateutil/issues/1167	https://github.com/dateutil/dateutil/pull/1168	2266	0.9356910032	1093	1	0	0		Date		Datetime Arithmetic			Medium	Medium	Medium	Medium	???? I think the logic doesn't make sense	Unintuitive Arithmetic			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	python	typeshed	Invalid typing for datetime.timedelta.__init__?	https://github.com/python/typeshed/issues/5529	https://github.com/python/typeshed/pull/5532	4139	0.9213960365	1377	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	python	typeshed	tzinfo vs. timestamp type for timezone.utc	https://github.com/python/typeshed/issues/567	https://github.com/python/typeshed/pull/568	4139	0.9126549311	1237	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	Value Error when setting years	https://github.com/vacanza/python-holidays/issues/527	https://github.com/vacanza/python-holidays/pull/528	1375	0.9049516979	9358	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	jupyter-server	jupyter_server	datetime.datetime.utcnow() and datetime.datetime.utcfromtimestamp() are deprecated in Python 3.12	https://github.com/jupyter-server/jupyter_server/issues/1296	https://github.com/jupyter-server/jupyter_server/pull/1353	461	0.8996655222	3303	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	Mississippi Holiday - Confederate Memorial Day - Calculation incorrect	https://github.com/vacanza/python-holidays/issues/1774	https://github.com/vacanza/python-holidays/pull/1775	1375	0.8971165925	1326	1	0	0		Date		Datetime Arithmetic	Datetime Construction		Low	Medium	Low	Low		Unintuitive Arithmetic			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	seandstewart	typical	transmute from datetime.datetime -> pendulum.Datetime not handling tzinfo right	https://github.com/seandstewart/typical/issues/91	https://github.com/seandstewart/typical/pull/92	183	0.8828307451	1005	1	0	1		Timezone		Library Conversions			Low	Medium	Medium	Medium		Adding Support for New Libraries			Specific	
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	mverleg	pyjson_tricks	Ambiguous timezone info in datetime	https://github.com/mverleg/pyjson_tricks/issues/89	https://github.com/mverleg/pyjson_tricks/commit/b3e0b9e682a81b6d6e327cd114a85e70d697441c	154	0.8708167515	1400	1	0	0		Timezone		Datetime Construction			High	Medium	Medium	Medium		Creating time in unspecified fold			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	ibis-project	ibis	ENH: Support timestamp, date, and time arithmetic	https://github.com/ibis-project/ibis/issues/1228	https://github.com/ibis-project/ibis/pull/1243	4407	0.8581796188	3227	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	Use `timedelta` for days offset calculation	https://github.com/vacanza/python-holidays/issues/891	https://github.com/vacanza/python-holidays/pull/900	1375	0.8571746672	1110	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	freach	udatetime	Timestamp conversion does not handle daylight time	https://github.com/freach/udatetime/issues/10	https://github.com/SkyTruth/udatetime/commit/a72ff2e3fa8af3ed86364001058ae1b8a2602acd	241	0.8538663708	1669	1	0	0		DST	Timestamps	Datetime Construction			Medium	Medium	High	High	assuming utc when its actually local	Using Naïve Datetime Incorrectly			No	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	timvink	mkdocs-git-revision-date-localized-plugin	DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version	https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/issues/121	https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/commit/4bf713aaa410ce8a79572545129656b59cc8f5bc	177	0.8354575386	1285	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low		Outdated/Deprecated APIs			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	stringertheory	traces	[WIP] set_interval problems when dealing with hours	https://github.com/stringertheory/traces/issues/217	https://github.com/xeor/traces/commit/855af12f53c892131a1adb9ce6429a24dfd32d1a	525	0.8283535221	1530	1	0	0		Duration		Datetime Construction	Replacing/Rounding Datetime Components		Low	Medium	Medium	Medium		Precision of Representation			Specific	
	TRUE	FALSE	FALSE	FALSE	FALSE	cockroachdb	django-cockroachdb	DATE_TRUNC result is incorrectly localized when a timezone is set	https://github.com/cockroachdb/django-cockroachdb/issues/32	https://github.com/timgraham/django-cockroachdb/commit/07b558032be49d9f8da18bffa36d954d8cacd0cc	158	0.823205222	2679	1	0	0																
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	pallets	quart	DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).	https://github.com/pallets/quart/issues/305	https://github.com/pallets/quart/pull/306	2715	0.8177812689	3499	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low		Outdated/Deprecated APIs			Yes	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	vacanza	python-holidays	US Holidays Error: dictionary changed during iteration when passing years to holidays.US constructor	https://github.com/vacanza/python-holidays/issues/569	https://github.com/vacanza/python-holidays/pull/586	1375	0.7988695388	18315	1	0	0		Timestamps		Timestamp/Hash Construction			Medium	Medium	Very High	Medium		Precision of Representation			No	
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	TRUE	BeanieODM	beanie	Custom encoders encode `datetime.datetime` as `datetime.date` encoder.	https://github.com/BeanieODM/beanie/issues/271	https://github.com/BeanieODM/beanie/pull/164	1857	0.7894631654	2002	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	snowflakedb	snowflake-connector-python	SNOW-582728: Invalid Pyarrow Timestamps Returned	https://github.com/snowflakedb/snowflake-connector-python/issues/1108	https://github.com/snowflakedb/snowflake-connector-python/pull/1104	565	0.779741647	2651	1	0	1																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	dsmrreader	dsmr-reader	Explore timezone.localtime() as replacement for datetime.astimezone()	https://github.com/dsmrreader/dsmr-reader/issues/50	https://github.com/dsmrreader/dsmr-reader/commit/efcbb7f49d9ba22183aa04f6844c4261c6e2ff89	458	0.7791396651	1415	1	0	0		Timezone		Timezone Conversions	Library Conversions	Datetime Construction	Medium	Medium	Very High	Medium	seems like they're switching to django's "localtime()" since it relies on something that's hardcoded to UTC	Using Naïve Datetime Incorrectly	Adding Support for New Libraries	Adding Support for New Features	Specific	
	TRUE	FALSE	FALSE	FALSE	FALSE	edgedb	edgedb	Fix std::duration and add cal::relativedelta	https://github.com/edgedb/edgedb/issues/903	https://github.com/edgedb/edgedb-js/pull/87	12712	0.7769843539	1905	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	googleapis	python-storage	generate_signed_post_policy_v4() improperly handles expiration timestamps with tzinfo=None	https://github.com/googleapis/python-storage/issues/244	https://github.com/googleapis/python-storage/pull/250	420	0.7762413996	1158	1	0	0		Timezone		Datetime Construction			Medium	Medium	Low	Low		Using Naïve Datetime Incorrectly			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	apache	airflow	DateTimeSensorAsync breaks if target_time is timezone-aware	https://github.com/apache/airflow/issues/29576	https://github.com/apache/airflow/pull/29606	35031	0.7755959493	2962	1	0	1		Timezone		Timezone Conversions	Datetime Construction		Low	High	Low	Low		Adding Support for New Features	Using Naïve Datetime Incorrectly		Specific	
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	thombashi	DateTimeRange	Substraction from `end_datetime` with negative `relativedelta(days=-3, weeks=-2, ... )` ?	https://github.com/thombashi/DateTimeRange/issues/44	https://github.com/thombashi/DateTimeRange/commit/f474ba53721b7f3b61b4ebf6091861b1ad95c8af	101	0.7752957547	1001	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	danielgtaylor	python-betterproto	Inconsistancy between Timestamp field serailized via protobuf and json	https://github.com/danielgtaylor/python-betterproto/issues/467	https://github.com/danielgtaylor/python-betterproto/pull/468	1423	0.7374314984	3226	1	0	0		Timezone		Timezone Conversions	String Parsing/Formatting (data)		Low	Medium	Low	Low	basically exact same as 38	Read/Write Naïve times	Adding Support for New Features		Specific	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	census-instrumentation	opencensus-python	Standardize timestamps	https://github.com/census-instrumentation/opencensus-python/issues/502	https://github.com/census-instrumentation/opencensus-python/pull/552	663	0.7367843687	1389	1	0	0		Timestamps	NTP/Leap Seconds	Timestamp/Hash Construction	Replacing/Rounding Datetime Components		Medium	Medium	High	Medium	they're standardizing their timestamps to account for leap seconds	Adding Support for New Features	OOB Timestamps	Precision of Representation	No	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	TRUE	grafana	oncall	Timezone issues on Schedules page	https://github.com/grafana/oncall/issues/3576	https://github.com/grafana/oncall/pull/3618	3288	0.7365572686	1967	1	0	0																
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	FALSE	richardpenman	whois	Expiration date for .com.ua zone is a string instead of datetime	https://github.com/richardpenman/whois/issues/221	https://github.com/richardpenman/whois/pull/226	340	0.7309318669	1091	1	0	0	datetime.UTC was added in a later version of python	String Representation	Timezone	String Parsing/Formatting (data)	Datetime Construction		High	Medium	Low	Low	It's sort of the opposite, where they used the new API too soon	Outdated/Deprecated APIs			No	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	sdispater	pendulum	Increase DateTime by 1 day across daylight saving change point fails	https://github.com/sdispater/pendulum/issues/768	https://github.com/sdispater/pendulum/commit/47c92b7cea3139ed631a573425f39c1c8b54ea6a	6109	0.7257255471	1714	1	0	1		Duration	DST	Datetime Arithmetic			Medium	Medium	Medium	Low		Crossing DST boundaries	Library Bug		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	frictionlessdata	frictionless-py	Exception on pandas parser when using a datetime column containing timezone information as index	https://github.com/frictionlessdata/frictionless-py/issues/1105	https://github.com/frictionlessdata/frictionless-py/pull/1101	683	0.7248597494	1607	1	0	0		Timezone		Timezone Conversions	Library Conversions	Timestamp/Hash Construction	Low	Medium	Medium	Low	basically exact same as 38	Read/Write Naïve times	Adding Support for New Features		Specific	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	Election-Tech-Initiative	electionguard-python	🐛 Datetime tick generation is inconsistent	https://github.com/Election-Tech-Initiative/electionguard-python/issues/190	https://github.com/Election-Tech-Initiative/electionguard-python/pull/189	157	0.7242460704	1334	1	0	0		Timestamps	Timezone	Timestamp/Hash Construction	Datetime Construction		Low	Medium	Medium	Medium	switching to unix epoch so creating datetimes is more consistent	Using Naïve Datetime Incorrectly	Precision of Representation		Yes	
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	fsspec	filesystem_spec	datetime.utcnow() is deprecated	https://github.com/fsspec/filesystem_spec/issues/1312	https://github.com/fsspec/filesystem_spec/pull/1314	934	0.7227329485	1304	1	0	0		Timezone		Datetime Construction			Low	Low	Medium	Low	typical deprecated datetime.utcnow()	Outdated/Deprecated APIs			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	Pickling DateTime Objects with Timezones	https://github.com/scrapinghub/dateparser/issues/365	https://github.com/scrapinghub/dateparser/pull/366	2480	0.7204216868	1648	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)	Datetime Construction		Low	Medium	Low	Medium		Read/Write Naïve times			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	robotframework	robotframework	DateTime: `Get Current Date` with epoch format and timezone UTC return wrong value	https://github.com/robotframework/robotframework/issues/3306	https://github.com/robotframework/robotframework/commit/73d9a6cdead85001fae46d54705f3baf5887ffbd	9279	0.7174705468	1508	1	0	0		Timezone	Timestamps	Datetime Construction	Timezone Conversions	Library Conversions	Low	Medium	Medium	Medium		Using Naïve Datetime Incorrectly	Outdated/Deprecated APIs		Yes	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	FALSE	requests-cache	aiohttp-client-cache	`datetime.utcnow` is deprecated	https://github.com/requests-cache/aiohttp-client-cache/issues/237	https://github.com/requests-cache/aiohttp-client-cache/pull/243	112	0.7145898302	1218	1	0	0		Timezone		Datetime Construction			Low	Low	Medium	Low	why would they get rid of the tzinfo?	Outdated/Deprecated APIs	Using Naïve Datetime Incorrectly		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	kayak	pypika	Interval query trims right zeros for integer values	https://github.com/kayak/pypika/issues/152	https://github.com/kayak/pypika/commit/40709f4088f596152f2fe395a403baef90d8d2a2	2407	0.713719698	1022	1	0	0																
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	stringertheory	traces	wrong value when assigning twice the same interval	https://github.com/stringertheory/traces/issues/222	https://github.com/sdementen/traces/commit/b00c82b5f2e927ad1158d8ffc6344596f2531656	525	0.708854291	1158	1	0	0		Duration		Datetime Construction	Datetime Comparison		Medium	Medium	Low	Low		Typo			Specific	
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Error when creating datetime.time with dateutil.tz.tzwinlocal	https://github.com/dateutil/dateutil/issues/216	https://github.com/dateutil/dateutil/pull/219	2266	0.7083106481	1795	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	forseti-security	forseti-security	Standardize on a datetime format and use throughout.	https://github.com/forseti-security/forseti-security/issues/1163	https://github.com/forseti-security/forseti-security/pull/1196	1275	0.7047040872	1832	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	facetoe	zenpy	IncrementalEndpoint start_time arg for timezone aware datetime	https://github.com/facetoe/zenpy/issues/86	https://github.com/facetoe/zenpy/commit/8a135b0d56f7add8c33dbf91f55d9c5ce9868619	333	0.7040864024	5715	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	pydantic	pydantic-extra-types	pendulum DateTime type doesn't accept python standard datetime	https://github.com/pydantic/pydantic-extra-types/issues/139	https://github.com/pydantic/pydantic-extra-types/pull/158	153	0.7030454919	1001	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	PrefectHQ	prefect	Prefect datetimes need to be timezone-aware (especially schedules)	https://github.com/PrefectHQ/prefect/issues/308	https://github.com/PrefectHQ/prefect/pull/325	15193	0.6930265641	1415	1	0	1																
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	milvus-io	pymilvus	[FEATURE]: Add util functions to manipulate hybrid timestamp	https://github.com/milvus-io/pymilvus/issues/830	https://github.com/milvus-io/pymilvus/pull/831	924	0.6908668325	3442	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	python-telegram-bot	python-telegram-bot	job_queue.run_daily fails for timezone aware datetime.datetime objects	https://github.com/python-telegram-bot/python-telegram-bot/issues/1409	https://github.com/torresjrjr/python-telegram-bot/commit/41c5469073b0c3303f4c377847317e7cfe6b3c90	25168	0.6903573489	1618	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Extra second prior to Dec 13, 1901	https://github.com/sdispater/pendulum/issues/152	https://github.com/sdispater/pendulum/commit/c0d37bd7823ae67367a5662e1da29585a2b7ef96	6109	0.6896613204	1045	1	0	1		Timestamps		Replacing/Rounding Datetime Components	Datetime Construction		High	Low	Low	Medium		OOB Timestamps	Precision of Representation	Library Bug	Yes	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	sdispater	pendulum	parse 'Z' timezone designator in iso8601 strings as Timezone('UTC'), not Timezone('+00:00')	https://github.com/sdispater/pendulum/issues/441	https://github.com/sdispater/pendulum/pull/448	6109	0.6874170625	1438	1	0	1		String Representation	Timezone	String Parsing/Formatting (data)	Datetime Construction		Medium	Low	High	Low	pendulum is parsing the string incorrectly to Timezone('+00:00') instead of Timezone('UTC')	Comparing Timezones			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	python-dateutil 2.7.0: TypeError in `parser.parse()`	https://github.com/dateutil/dateutil/issues/639	https://github.com/privacyidea/privacyidea/pull/1084	2266	0.6865669057	2716	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	google	timesketch	Timestamp is not added if missing despite datetime being present	https://github.com/google/timesketch/issues/2667	https://github.com/google/timesketch/pull/2668	2518	0.6855401739	1043	1	0	0																
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	FALSE	scrapinghub	dateparser	Unable to parse UTC / GMT >= 10	https://github.com/scrapinghub/dateparser/issues/615	https://github.com/scrapinghub/dateparser/pull/632	2480	0.6843178725	1375	1	0	0		String Representation	Timezone	String Parsing/Formatting (data)	Datetime Construction		Medium	High	Medium	Medium		TODO			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	Altinity	clickhouse-sink-connector	DateTime with scale mapping to CH	https://github.com/Altinity/clickhouse-sink-connector/issues/118	https://github.com/Altinity/clickhouse-sink-connector/pull/126	188	0.6837446968	1953	1	0	0																
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	aimhubio	aim	Store and retrieve all datetime objects and timestamps as UTC tz-aware times	https://github.com/aimhubio/aim/issues/1084	https://github.com/aimhubio/aim/pull/1216	4892	0.6835294552	1745	1	0	0		Timezone	Timestamps	Datetime Construction	Timestamp/Hash Construction		Medium	Medium	Low	Low	changing from naive to tz aware (utc) objects	Using Naïve Datetime Incorrectly			Yes	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	TRUE	ecederstrand	exchangelib	EWSTimeZone disguises pytz.AmbiguousTimeError and pytz.NonExistentTimeError exceptions	https://github.com/ecederstrand/exchangelib/issues/612	https://github.com/ecederstrand/exchangelib/pull/613	1140	0.6741365694	1455	1	0	0	Issue with error propagation															
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Going from winter- to summertime by adding a timedelta	https://github.com/dateutil/dateutil/issues/1204	https://github.com/CodingPirates/forenings_medlemmer/pull/782	2266	0.6630704796	1711	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	RhetTbull	osxmetadata	bug: timezone not handled properly	https://github.com/RhetTbull/osxmetadata/issues/17	https://github.com/RhetTbull/osxmetadata/commit/10e17d562be6b43d9ab348c464cda9a9bdaaac82	110	0.6601730813	7645	1	0	0																
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	skarim	vobject	Serializing iCalendar throws NonExistentTimeError when using pytz timezones	https://github.com/skarim/vobject/issues/32	https://github.com/medmunds/vobject/commit/c7efe6ad5b01fc88ccc3a4ade88f47f66418c40c	249	0.6583571373	3084	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)			Medium	Low	Medium	Medium		Adding Support for New Libraries			No	
	TRUE	FALSE	FALSE	FALSE	TRUE	cubewise-code	tm1py	MessageLogService missing utc_localize_time static method	https://github.com/cubewise-code/tm1py/issues/1051	https://github.com/cubewise-code/tm1py/pull/1052	180	0.6543680811	1587	1	0	0	They just kinda put the function in the wrong place															
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	TRUE	python	cpython	Possible bug in datetime utc	https://github.com/python/cpython/issues/88829	https://github.com/SmartManoj/cpython/commit/dc3cdc1a80aa193fc0c08677882c3ede4b9aaf03	60455	0.6538513499	5597	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	googlemaps	google-maps-services-python	Timezones are ignored when converting datetimes	https://github.com/googlemaps/google-maps-services-python/issues/185	https://github.com/googlemaps/google-maps-services-python/pull/350	4396	0.6535934088	1987	1	0	0	use an old way of timestamping that doesn't account for timestamp	Timezone		Timezone Conversions	Timestamp/Hash Construction		Low	Medium	Low	Low	Add to test_deprecated APIs the timetuple function	Read/Write Naïve times	Outdated/Deprecated APIs		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	holoviz	holoviews	Local timezone can break regrid operation	https://github.com/holoviz/holoviews/issues/2459	https://github.com/holoviz/holoviews/pull/2463	2650	0.6513918464	2342	1	0	0																
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	unionai-oss	pandera	Pandas deprecated `(timezone naive timestamp).astype(timezone aware dtype)`	https://github.com/unionai-oss/pandera/issues/971	https://github.com/unionai-oss/pandera/pull/972	3095	0.6501153865	1304	1	0	0		Timezone		Datetime Construction			Low	Low	High	High		Using Naïve Datetime Incorrectly			Specific	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	pydantic	pydantic	TzInfo type doesn't provide proper dst	https://github.com/pydantic/pydantic/issues/6735	https://github.com/pydantic/pydantic-core/pull/864	19350	0.6475118973	3433	1	0	0		DST	Timezone	Datetime Construction			Low	Medium	High	High		Using Naïve Datetime Incorrectly			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Exercise: Martin Luther King day	https://github.com/dateutil/dateutil/issues/664	https://github.com/dateutil/dateutil/pull/739	2266	0.6422649254	2070	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	ibis-project	ibis	FEAT: Need to add Ibis support for various timestamp component operations in OmniSci	https://github.com/ibis-project/ibis/issues/1916	https://github.com/ibis-project/ibis/pull/2149	4407	0.6412891955	1650	1	0	0																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	TRUE	dusktreader	flask-praetorian	Dependency issues with pendulum and python 3.12	https://github.com/dusktreader/flask-praetorian/issues/292	https://github.com/dusktreader/flask-praetorian/pull/293	340	0.6362162923	1205	1	0	1											just resolving dependencies					
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	huggingface	huggingface_hub	`test_from_raw_initialization` seems to be missing daylight savings?	https://github.com/huggingface/huggingface_hub/issues/1976	https://github.com/huggingface/huggingface_hub/pull/1982	1790	0.6354657674	4311	1	0	0		Timezone	DST	Timezone Conversions	String Parsing/Formatting (data)	Datetime Construction	Medium	Medium	Medium	Low		Dropping Timezones			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	googleapis	python-ndb	Auto-add and naive datetimes not offsetting timezone correctly	https://github.com/googleapis/python-ndb/issues/517	https://github.com/chrisrossi/python-ndb/commit/bbda21f1ecf8d83ae41623b5f1347784817c00f9	147	0.6344238618	6016	1	0	0																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	influxdata	influxdb-client-python	Nanosecond Precision	https://github.com/influxdata/influxdb-client-python/issues/314	https://github.com/influxdata/influxdb-client-python/pull/315	677	0.6334660476	1163	1	0	0		TODO	Timestamps	Timestamp/Hash Construction	Replacing/Rounding Datetime Components		Medium	Low	Low	Low	user was unsure about datetime not supporting nanoseconds, so they updated the docs	Incorrect API usage	Precision of Representation		No	
	TRUE	FALSE	FALSE	FALSE	FALSE	PrefectHQ	prefect	Timezone Union Schedule Test Fails	https://github.com/PrefectHQ/prefect/issues/1053	https://github.com/PrefectHQ/prefect/pull/1062	15193	0.6277091604	3157	1	0	1																
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	ApeWorX	ape	General: add functionality to convert datetime object to timestamp	https://github.com/ApeWorX/ape/issues/436	https://github.com/ApeWorX/ape/pull/441	838	0.6245103603	1016	1	0	0																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	chimpler	pyhocon	parsing of list of durations doesn't work	https://github.com/chimpler/pyhocon/issues/252	https://github.com/chimpler/pyhocon/pull/255	492	0.62164858	1250	1	0	0		String Representation		String Parsing/Formatting (humanized)	Delta Construction											
	TRUE	FALSE	FALSE	FALSE	TRUE	dateutil	dateutil	rrule does not play well with pytz tzinfo at daylight savings?	https://github.com/pydantic/pydantic/issues/8195	https://github.com/pimutils/khal/pull/798	2266	0.6214340828	3881	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic	v2 TZInfo is not understood by pandas	https://github.com/pydantic/pydantic/issues/8195	https://github.com/pydantic/pydantic-core/pull/1197	19350	0.6182634619	3823	1	0	0		Timezone		Datetime Equality	Querying Datetime Components		Low	Medium	Medium	Low		Comparing Timezones			Yes	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	agronholm	apscheduler	IntervalTrigger unnecessarily expects integers, when datetime.timedelta accepts floats	https://github.com/agronholm/apscheduler/issues/444	https://github.com/agronholm/apscheduler/commit/f37a9e7066be0e2118625bf4ca2bcbe5c8db3ce9	5869	0.6164578013	1584	1	0	0		Duration		Delta Construction			Low	Low	Low	Low	something expects integers, but datetime also allows floats	Adding Support for New Features			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	tobymao	sqlglot	Regression in interval parsing case after #1413	https://github.com/tobymao/sqlglot/issues/1441	https://github.com/tobymao/sqlglot/pull/1444	5871	0.6150824353	2116	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	Tests fail on 31st of a month	https://github.com/scrapinghub/dateparser/issues/1053	https://github.com/mweinelt/nixpkgs/commit/0cece84ef3b7ae1a2cd00b3f9893673e1b7e45e2	2480	0.6148361494	1213	1	0	0		Date		Datetime Construction	Replacing/Rounding Datetime Components		Low	Low	Low	Low	Stupid but valid bug	Unintuitive Arithmetic			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	agronholm	apscheduler	[v4.0.0a4] Combining daily and weekly triggers increments by 14 days	https://github.com/agronholm/apscheduler/issues/911	https://github.com/agronholm/apscheduler/pull/914	5869	0.6143886301	7263	1	0	0		Duration		Datetime Arithmetic	Delta Construction	Datetime Comparison	Medium	Medium	Low	Low		Unintuitive Arithmetic			Specific	
	TRUE	FALSE	FALSE	FALSE	TRUE	ariebovenberg	whenever	Add a better `timedelta`?	https://github.com/ariebovenberg/whenever/issues/27	https://github.com/ariebovenberg/whenever/pull/48	361	0.6135368028	6437	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	sqlalchemy	sqlalchemy	postgresql range tests might have a time-oriented race condition... seems like a transient DST issue	https://github.com/sqlalchemy/sqlalchemy/issues/9471	https://github.com/sqlalchemy/sqlalchemy/commit/e8420e993764b5dcd4ce5879412d556d2a7d2870	9045	0.6120064634	4295	1	0	0		DST	Timezone	Timezone Conversions			High	Low	Medium	Medium		Unintuitive Arithmetic			Specific	
	TRUE	FALSE	FALSE	FALSE	TRUE	ranaroussi	yfinance	KeyError Timestamps	https://github.com/ranaroussi/yfinance/issues/71	https://github.com/ranaroussi/yfinance/commit/34ef7668b865e5eef9ff7187ef60cb7fe0fea5c7	12242	0.6114225964	12366	1	0	0																
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	qutebrowser	qutebrowser	New completion and timezone issues	https://github.com/qutebrowser/qutebrowser/issues/2830	https://github.com/qutebrowser/qutebrowser/pull/2295	9434	0.6101371888	3965	1	0	0		Timezone	Timestamps	Timestamp/Hash Construction	String Parsing/Formatting (data)	Datetime Construction	Medium	Medium	Very High	High	problems with parsing and utcnow() giving naive objects, so they did a huge fix and refactored their entire repo	Using Naïve Datetime Incorrectly	Outdated/Deprecated APIs		Yes	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	TRUE	pydantic	pydantic-core	Improve error message of timedelta validation	https://github.com/pydantic/pydantic-core/issues/882	https://github.com/pydantic/pydantic-core/pull/915	1309	0.6096613144	1499	1	0	0																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	duration months cannot be added to other durations	https://github.com/sdispater/pendulum/issues/479	https://github.com/sdispater/pendulum/pull/482	6109	0.6080746729	1357	1	0	1		Duration		Datetime Arithmetic			Low	Medium	High	Low		Incorrect Format Assumptions	Unintuitive Arithmetic		No	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	scrapinghub	dateparser	test_timezone_offset_calculation_1 fails on 32bit platforms	https://github.com/scrapinghub/dateparser/issues/1204	https://github.com/scrapinghub/dateparser/pull/1205	2480	0.6077727615	1477	1	0	0		Timestamps		Datetime Construction			Medium	Medium	Medium	Low	INTERESTING	OOB Timestamps			Yes	
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	python	cpython	timedelta fails to consider fold	https://github.com/python/cpython/issues/112638	https://github.com/apache/airflow/pull/35887	60455	0.6060742009	3703	1	0	0		Timestamps	Fold	Datetime Arithmetic	Delta Arithmetic	Timezone Conversions	Low	Low	Low	Low	user thought timedelta was malfunctioning; it's actually not and they just updated the docs	Incorrect API usage	Using Naïve Datetime Incorrectly	Unintuitive Arithmetic	No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	hyperledger	aries-cloudagent-python	[BUG] Improper Use of TimeZone-Naive datetime.utcnow()	https://github.com/hyperledger/aries-cloudagent-python/issues/2678	https://github.com/hyperledger/aries-cloudagent-python/pull/2679	399	0.5979026499	6961	1	0	0		Timezone		Datetime Construction			Low	Medium	Low	Low		Using Naïve Datetime Incorrectly	Outdated/Deprecated APIs		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	GadgetReactor	pyHS100	Set timezone functionality	https://github.com/GadgetReactor/pyHS100/issues/53	https://github.com/jeffsf/pyHS100/commit/fba7637ee75390b1baab5ebbf2b6d08363e6e5a5	406	0.5967350099	13142	1	0	0		Timezone		Datetime Construction			Low	Medium	Medium	Low		Using Naïve Datetime Incorrectly			No	
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	dateutil	dateutil	parser.parse does not apply time zone to date if ignoretz is True and tzinfos is given	https://github.com/dateutil/dateutil/issues/80	https://github.com/dateutil/dateutil/pull/103	2266	0.5958438073	2548	1	0	0		Timestamps		Timestamp/Hash Construction			Medium	High	Medium	Medium					No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	raiden-network	raiden	Remove naive datetime usage	https://github.com/raiden-network/raiden/issues/7043	https://github.com/raiden-network/raiden-services/pull/1012	1841	0.5954214629	2249	1	0	0		Timezone		Datetime Construction			Medium	Low	Low	Low		Using Naïve Datetime Incorrectly	Dropping Timezones		No	
	TRUE	FALSE	FALSE	FALSE	FALSE	Opentrons	opentrons	bug: HTTP API returns datetime strings without timezone info	https://github.com/Opentrons/opentrons/issues/6374	https://github.com/Opentrons/opentrons/pull/6375	391	0.5926222358	2711	1	0	0		Timezone		Datetime Construction	String Parsing/Formatting (data)		Low	Medium	Medium	Low		Using Naïve Datetime Incorrectly	Outdated/Deprecated APIs		No	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	edgedb	edgedb	Validate names of datetime units to only support plurals	https://github.com/edgedb/edgedb/issues/958	https://github.com/edgedb/edgedb/commit/9e8cd5f63d226c55e4c147bf4333f0a35b3a073c	12712	0.59147574	1945	1	0	0		Duration		Delta Construction			Low	Low	Medium	Low		Outdated/Deprecated APIs			No	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	jdemaeyer	brightsky	Enforce ISO 8601 compliant timestamps	https://github.com/jdemaeyer/brightsky/issues/101	https://github.com/jdemaeyer/brightsky/commit/e0699fa0b16d0507f0f25d262d99ac95ee4eec2c	277	0.5899447714	3748	1	0	0		String Representation		String Parsing/Formatting (data)	Datetime Construction		High	Medium	Medium	Medium	encoding url queries incorrectly lead to wrong time outputs	Dropping Timezones			Specific	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	TRUE	neo4j	neo4j-python-driver	[Feature Request] Deprecate pytz	https://github.com/neo4j/neo4j-python-driver/issues/610	https://github.com/robsdedude/neo4j-python-driver/commit/b3c8a4f6abaf9fa77ace3a4725a84b9de4e6e60c	877	0.5890749886	4567	1	0	0											its just deprecating pytz but they dont even deprecate it in the end					
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	adamchainz	time-machine	datetime.datetime.utcnow() should not have tzinfo	https://github.com/adamchainz/time-machine/issues/52	https://github.com/adamchainz/time-machine/commit/949f72a652cac28101350fcbee20afbe72880e8b	618	0.5885657281	1281	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low	INTERESTING	Using Naïve Datetime Incorrectly			Yes	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	Off-by-one microsecond when parsing with certain timezones	https://github.com/sdispater/pendulum/issues/74	https://github.com/dokai/pendulum/commit/7d69bbe118ffee335def1c19e1abb06fa9f88359	6109	0.5856069094	4890	1	0	1		Timestamps		Datetime Comparison	Querying Datetime Components		High	Low	High	Low	Rounding Errors could be its own BPST	Precision of Representation	TODO		No	
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	tzname() inconsistent between tzwin() and tzwinlocal() and neither reflect actual DST.	https://github.com/dateutil/dateutil/issues/143	https://github.com/dateutil/dateutil/pull/141	2266	0.5833259673	4932	1	0	0		Timezone	DST	Querying Datetime Components	Datetime Construction		Medium	Medium	Very High	High		Library Bug	Adding Support for New Features		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	jazzband	djangorestframework-simplejwt	DeprecationWarning: datetime.datetime.utcnow() is deprecated	https://github.com/jazzband/djangorestframework-simplejwt/issues/756	https://github.com/iMerica/dj-rest-auth/pull/610	3867	0.5816509928	1253	1	0	0		Timezone		Datetime Construction			Low	Low	Medium	Low		Outdated/Deprecated APIs			Yes	
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	sdispater	pendulum	Timezone is empty on Windows 10 bash shell, causing error while unpickling Pendulum objects	https://github.com/sdispater/pendulum/issues/167	https://github.com/sdispater/pendulum/pull/174	6109	0.5815114874	2158	1	0	1		Timezone	String Representation	Datetime Construction	String Parsing/Formatting (data)		Medium	Medium	Medium	Low		TODO	Library Bug		Yes	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	microsoft	ptvsd	Debugger exiting after after 30 seconds	https://github.com/microsoft/ptvsd/issues/1890	https://github.com/tl-its-umich-edu/my-learning-analytics/pull/1127	544	0.5806705056	1724	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	sdispater	pendulum	str(pendulum.DateTime) != str(datetime.datetime)	https://github.com/sdispater/pendulum/issues/662	https://github.com/sdispater/pendulum/commit/74bb3216bc5fd2706de8bbbd2c91207e2a9a3f62	6109	0.5800176605	1822	1	0	1																
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	mage-ai	mage-ai	[BUG] Snowflake destination incorrect timezone information on UTC dates	https://github.com/mage-ai/mage-ai/issues/4821	https://github.com/mage-ai/mage-ai/pull/4875	7298	0.57788079	1832	1	0	1		Timezone	Timestamps	String Parsing/Formatting (data)	Timestamp/Hash Construction		Low	Medium	Low	Low		Using Naïve Datetime Incorrectly			No	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	python-humanize	humanize	naturaltime should support timezone-aware datetimes	https://github.com/python-humanize/humanize/issues/17	https://github.com/snarfed/webutil/commit/38e9086b239c3ab6d39a88ae9fdc09e7fccf4857	395	0.5773365263	1069	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)			Low	Medium	Medium	Medium	using naive datetimes breaks the code	Using Naïve Datetime Incorrectly			Yes	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	pydantic	pydantic	timedelta ValidationError with input_value like '1 00:00:11'	https://github.com/pydantic/pydantic/issues/7650	https://github.com/pydantic/pydantic/pull/7652	19350	0.5763396219	2182	1	0	0		String Representation		String Parsing/Formatting (data)	Delta Construction		Low	Medium	Low	Low	fix is just doc change	Incorrect Format Assumptions			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	rpy2	rpy2	Time shift with converting to pandas time series when time zone other than GMT	https://github.com/rpy2/rpy2/issues/634	https://github.com/rpy2/rpy2/commit/1eeabb3d986571065dbc6bb15a9ce98eb164cbda	517	0.5713758527	1736	1	0	0		Timezone		Timezone Conversions	Datetime Construction		Medium	Medium	Medium	Low		Using Naïve Datetime Incorrectly			Specific	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	twintproject	twint	Elasticsearch calculation for HOUR and Day	https://github.com/twintproject/twint/issues/401	https://github.com/twintproject/twint/commit/3b07559381e701bdb0808bd8c37fd2fb6afd8583	15621	0.5692844519	2132	1	0	0		Timestamps		Datetime Construction			Low	Medium	Low	Low		Precision of Representation			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	TRUE	ibis-project	ibis	Timedelta API first draft	https://github.com/ibis-project/ibis/issues/143	https://github.com/ibis-project/ibis/pull/225	4407	0.5658543634	1519	1	0	0																
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	kiorky	croniter	Folding time when transitioning out of DST is not considered	https://github.com/kiorky/croniter/issues/56	https://github.com/apache/airflow/pull/35887	355	0.5644262298	1563	1	0	0		Fold		Datetime Arithmetic	Datetime Construction		High	High	High	High	INTERESTING	Crossing DST boundaries	Creating time in unspecified fold		Yes	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	browser-history	browser-history	[TESTS] test_browsers_* outcome is timezone-dependent	https://github.com/browser-history/browser-history/issues/90	https://github.com/browser-history/browser-history/pull/93	153	0.562430549	15600	1	0	0		Timezone		Datetime Construction	Datetime Equality		Medium	Low	Medium	Low		Using Naïve Datetime Incorrectly			Yes	
	TRUE	FALSE	FALSE	FALSE	TRUE	ManimCommunity	manim	Not all arrow tips are accessible	https://github.com/ManimCommunity/manim/issues/3129	https://github.com/ManimCommunity/manim/pull/3166	19686	0.5608485558	1586	1	0	0																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	snowflakedb	snowflake-connector-python	SNOW-499493: Some interval math off by one microsecond for years beyond ~2250	https://github.com/snowflakedb/snowflake-connector-python/issues/926	https://github.com/snowflakedb/snowflake-connector-python/pull/1030	565	0.5583135765	3419	1	0	1		Timestamps		Datetime Arithmetic	String Parsing/Formatting (data)	Replacing/Rounding Datetime Components	High	Low	High	High	INTERESTING -- idk if this is a fp	Precision of Representation	Unintuitive Arithmetic		Specific	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	python	cpython	datetime UTC deprecation warnings use the name "datetime" inconsistently	https://github.com/python/cpython/issues/106392	https://github.com/yctomwang/cpython/commit/e24344d3295a30f32e0ba33602c968e5a447b238	60455	0.5547182763	4047	1	0	0											INTERESTING					
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	pandas-dev	pandas-stubs	pd.tseries.offsets.WeekOfMonth missing week and weekday parameter in constructor	https://github.com/pandas-dev/pandas-stubs/issues/320	https://github.com/pandas-dev/pandas-stubs/pull/327	217	0.5546144216	1437	1	0	0																
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	KoffeinFlummi	Chronyk	relative month parsing fails when target month has fewer days than the current date	https://github.com/KoffeinFlummi/Chronyk/issues/5	https://github.com/KoffeinFlummi/Chronyk/commit/5d7a1e233915041edd5b48e763003a11af138b4c	344	0.5531081467	1670	1	0	0		String Representation	Timestamps	String Parsing/Formatting (humanized)	String Parsing/Formatting (data)		Medium	Medium	Medium	Medium	code written wrong, so months with 30 days fail when trying to jump forward or backward a few months	OOB Times	Unintuitive Arithmetic	Subtracting Dates	Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	agronholm	apscheduler	Standard tzinfo is not enough for apscheduler	https://github.com/agronholm/apscheduler/issues/384	https://github.com/agronholm/apscheduler/pull/391	5869	0.5483520289	12031	1	0	0		Timezone		Library Conversions	Datetime Construction		Low	High	Medium	Medium		Adding Support for New Libraries			Yes	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	ranaroussi	yfinance	Ticker.history() start and end datetime doesn't account for timezones	https://github.com/ranaroussi/yfinance/issues/545	https://github.com/ranaroussi/yfinance/pull/546	12242	0.5460838778	1339	1	0	0		Timestamps		Timestamp/Hash Construction			Medium	Medium	Low	Low		Using Naïve Datetime Incorrectly			No	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	FALSE	nextcord	nextcord	datetime.datetime.utcnow is deprecated in Python 3.12	https://github.com/nextcord/nextcord/issues/1062	https://github.com/nextcord/nextcord/pull/1107	1145	0.5450500429	1168	1	0	0		Timezone		Datetime Construction			Low	Low	Low	Low		Outdated/Deprecated APIs			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	model-bakers	model_bakery	seq doesn't work for timezone aware datetime objects	https://github.com/model-bakers/model_bakery/issues/322	https://github.com/model-bakers/model_bakery/pull/353	806	0.5443551003	1955	1	0	0		Timezone		Datetime Construction	Timestamp/Hash Construction		Low	Medium	Medium	Low		Using Naïve Datetime Incorrectly			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	googleapis	google-cloud-python	DISCUSSION: Should deserialized timestamps have a timezone?	https://github.com/googleapis/google-cloud-python/issues/279	https://github.com/dhermes/google-cloud-python/commit/b1b2aec3af0959a85ab1a3015e8c82468698120b	4704	0.5422287734	3054	1	0	0																
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	FALSE	aws	aws-sdk-pandas	Unexpected exception `TypeError: 'NoneType' object is not subscriptable` reading parquet files with timezone aware timestamps	https://github.com/aws/aws-sdk-pandas/issues/1823	https://github.com/aws/aws-sdk-pandas/pull/1840	3834	0.541965309	2215	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)	Datetime Construction		Medium	Medium	Medium	Medium	they expect everything to have a timezone, so I'm calling it naive date time. its a bit of an odd one	Using Naïve Datetime Incorrectly			Specific	
	TRUE	FALSE	FALSE	FALSE	TRUE	ibis-project	ibis	bug(duckdb): int-to-timestamp type cast issue in duckdb backend	https://github.com/ibis-project/ibis/issues/4058	https://github.com/ibis-project/ibis/pull/4061	4407	0.5418156601	1484	1	0	0																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	meteostat	meteostat-python	`Hourly` attempts to fetch data of next year	https://github.com/meteostat/meteostat-python/issues/132	https://github.com/meteostat/meteostat-python/commit/e3a927e6595d596e1b2649ea44b7df860e0760c6	379	0.5385583466	2875	1	0	0		Date		String Parsing/Formatting (data)	Querying Datetime Components		Medium	Medium	Low	Low	im so confused abt the ac's	OOB Datetimes			Specific	
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	pandas-dev	pandas-stubs	timedelta_range or interval_range should accept Timedelta or timedelta as freq	https://github.com/pandas-dev/pandas-stubs/issues/600	https://github.com/pandas-dev/pandas-stubs/pull/670	217	0.53841725	2116	1	0	0																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	TRUE	dateutil	dateutil	rrule parsing allows `UNTIL` with non-UTC dates	https://github.com/dateutil/dateutil/issues/633	https://github.com/ryanpetrello/dateutil/commit/5cba12a2fd7a15c9e9e3f6ed0546483348aa5906	2266	0.5371610403	1212	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	Returned datetime skips a day with time+timezone input and PREFER_DATES_FROM = 'future'	https://github.com/scrapinghub/dateparser/issues/403	https://github.com/reminder-bot/bot/pull/15	2480	0.5368515631	5721	1	0	0		Timezone	String Representation	Replacing/Rounding Datetime Components	String Parsing/Formatting (data)		Medium	Medium	Medium	Medium		Using Naïve Datetime Incorrectly			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	BittyTax	BittyTax	bug: GMT, BST are not the same as Europe/London	https://github.com/BittyTax/BittyTax/issues/251	https://github.com/BittyTax/BittyTax/commit/e7f4bd3a0e9382effb57190be11c9b1f348c677d	407	0.5349894054	1541	1	0	0		Timezone		Datetime Construction			Medium	Medium	Medium	Low		TODO			No	
1: Shrey Peter	FALSE	TRUE	FALSE	FALSE	TRUE	voxel51	fiftyone	[BUG] App timezone issues	https://github.com/voxel51/fiftyone/issues/2111	https://github.com/voxel51/fiftyone/pull/2115	6902	0.534822494	1816	1	0	0	like one line of python code was involved, but the actually faulty logic was tsx															
5: Peter Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	dateutil	dateutil	tzwin for the same timezone string does not compare equal	https://github.com/dateutil/dateutil/issues/151	https://github.com/dateutil/dateutil/pull/180	2266	0.5328494159	1188	1	0	0		Timezone		TODO			Medium	Medium	Medium	Low		Comparing Timezones	Library Bug		Yes	
6: Serena Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	apache	airflow	AttributeError: 'datetime.timezone' object has no attribute 'name'	https://github.com/apache/airflow/issues/16551	https://github.com/apache/airflow/pull/16599	35031	0.5324915053	14229	1	0	1		Timezone		Datetime Construction	Querying Datetime Components		Low	Medium	Low	Low	datetime.utc has no name???	Adding Support for New Libraries			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	ibis-project	ibis	Spark SQL add_months has nonstandard behavior for end-of-month days	https://github.com/ibis-project/ibis/issues/1886	https://github.com/amroid/ibis/commit/a38dff05c34eed7ae0afe09f63f2b89be71bbed4	4407	0.5311425876	1269	1	0	0																
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	FALSE	dateutil	dateutil	AttributeError when strftime argument includes "%Z" for datetime.time	https://github.com/dateutil/dateutil/issues/292	https://github.com/dateutil/dateutil/pull/309	2266	0.5290038546	1327	1	0	0		Timezone		String Parsing/Formatting (data)			Low	Medium	Medium	Low		TODO	Library Bug		Yes	
3: Shrey Sasha	FALSE	TRUE	FALSE	FALSE	TRUE	ericaltendorf	plotman	Bug: After config dst change, old (no longer configured) dst is still being used for new plots	https://github.com/ericaltendorf/plotman/issues/31	https://github.com/ericaltendorf/plotman/commit/3ecc7649f1336ea1103310e80ab2431582136eda	917	0.5260870966	1098	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	sqlalchemy	sqlalchemy	Implement mapping to MSSQL "DateTimeOffset" type when using SQLAlchemy generic type Datetime(Timezone=True)	https://github.com/sqlalchemy/sqlalchemy/issues/6306	https://github.com/sqlalchemy/sqlalchemy/commit/0c801c8a6617523796f304268d0417a59469a37c	9045	0.5243776735	1256	1	0	0		Timezone		Library Conversions	Datetime Construction		Medium	Medium	High	Medium		Using Naïve Datetime Incorrectly	Adding Support for New Features		No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	Couchers-org	couchers	Timezone issues in DB	https://github.com/Couchers-org/couchers/issues/322	https://github.com/Couchers-org/couchers/pull/324	355	0.5236403226	6243	1	0	0		Timezone		Datetime Comparison	Datetime Construction	String Parsing/Formatting (data)	Low	High	Medium	Low	seems like a kinda sketchy fix to me	Using Naïve Datetime Incorrectly			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	dateutil	dateutil	dateutil does not accept a dt argument of None	https://github.com/dateutil/dateutil/issues/132	https://github.com/dateutil/dateutil/pull/141	2266	0.5224267405	1566	1	0	0		Timezone		Querying Datetime Components			Low	Medium	Very High	Low	idk what fix im supposed to look at tell me why theres 15000	Incorrect Format Assumptions			No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	graphql-python	graphene	[Enhancement] DateTime inputs should accept Python datetimes	https://github.com/graphql-python/graphene/issues/863	https://github.com/graphql-python/graphene/pull/864	8006	0.5215769027	1387	1	0	0		String Representation		String Parsing/Formatting (data)			Low	Low	Medium	Low		Compatibility Issues			Specific	
2: Shrey Serena	FALSE	TRUE	FALSE	FALSE	FALSE	sdispater	pendulum	Interprets 2 digit year 85 as 2085 instead of 1985	https://github.com/sdispater/pendulum/issues/686	https://github.com/MrAlexBailey/pendulum-fix-YY/commit/1e560c9ccf5b11fd2beab409e81e123eb0ddb160	6109	0.5210428648	1601	1	0	1		Date	String Representation	String Parsing/Formatting (data)	Datetime Construction		High	Medium	Low	Low	i put it as high bc i believe it's failing silently -- could be wrong tho; also OOB time bc its technically OOB for the purposes of the program	Unintuitive Arithmetic	Library Bug	OOB Times	Yes	
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	TRUE	streamlit	streamlit	Handling timezones	https://github.com/streamlit/streamlit/issues/1837	https://github.com/streamlit/streamlit/pull/1838	32774	0.5203939288	2641	1	0	0																
4: Peter Serena	FALSE	TRUE	FALSE	FALSE	FALSE	sdispater	pendulum	Inconsistency with 'parse("13:00")' depending if Pendulum is built with C extensions or not	https://github.com/sdispater/pendulum/issues/210	https://github.com/sdispater/pendulum/pull/251	6109	0.5203829295	1672	1	0	1		String Representation		String Parsing/Formatting (humanized)	Datetime Construction		Medium	High	Medium	Medium	pendulum's parsing is wrong	Precision of Representation			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	python	cpython	Add `strptime`/`strftime` format code examples	https://github.com/python/cpython/issues/100574	https://github.com/python/cpython/pull/100575	60455	0.5185091792	1345	1	0	0																
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	ranaroussi	yfinance	Issue with DateTime index in yf.download	https://github.com/ranaroussi/yfinance/issues/125	https://github.com/rdiere/yfinance/commit/e7966b98b447002f0cff3070ad3054b1bcb8f97f	12242	0.5179997578	2992	1	0	0		String Representation		String Parsing/Formatting (data)	Datetime Construction		Medium	Medium	Low	Low		Precision of Representation			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	collerek	ormar	Timezone issues when filtering with dates	https://github.com/collerek/ormar/issues/504	https://github.com/collerek/ormar/pull/508	1600	0.5134223956	2153	1	0	0											seems like a fp?? idk					
	TRUE	FALSE	FALSE	FALSE	FALSE	zulip	zulip	Naive datetime warnings in populate_db	https://github.com/zulip/zulip/issues/2729	https://github.com/refeed/zulip/commit/4d50ba5e6fd987fbbe7267727fdd72816964b84b	20271	0.5131649887	2537	1	0	0		Timezone		Datetime Construction	Library Conversions		Low	Medium	Low	Low		Using Naïve Datetime Incorrectly			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	pydantic	pydantic	Pydantic TzInfo(UTC) != datetime.UTC	https://github.com/pydantic/pydantic/issues/8683	https://github.com/pydantic/pydantic-core/pull/1197	19350	0.5128671556	5200	1	0	0		Timezone		Timezone Equality	Querying Datetime Components		Low	Low	Medium	Medium		Comparing Timezones			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	jborean93	smbprotocol	OverflowError when parsing timestamp header.	https://github.com/jborean93/smbprotocol/issues/114	https://github.com/demisto/content/pull/13345	302	0.5124121136	1676	1	0	0		Timestamps		Timestamp/Hash Construction			Medium	Medium	High	Low		OOB Timestamps			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	snooze92	alfred-epoch-converter	Guard against system bad timezone	https://github.com/snooze92/alfred-epoch-converter/issues/13	https://github.com/snooze92/alfred-epoch-converter/pull/14	154	0.5116369134	1457	1	0	0		Timezone	DST	Datetime Arithmetic	Delta Arithmetic	Timezone Conversions	Medium	Medium	Medium	Medium		Using Naïve Datetime Incorrectly	Library Bug		Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	Bears-R-Us	arkouda	add Datetime methods/accessors to extract components of datetime values	https://github.com/Bears-R-Us/arkouda/issues/1376	https://github.com/jeichert60/arkouda/commit/6faefa0f3de0c37762419a112b0317b23a34327b	228	0.511318645	1532	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	aws	aws-sdk-pandas	Cannot set TimeUnit to MICROSECONDS	https://github.com/aws/aws-sdk-pandas/issues/2261	https://github.com/aws/aws-sdk-pandas/pull/2263	3834	0.5083542225	2671	1	0	0		Timestamps		Datetime Construction			Low	Low	High	Medium		Precision of Representation			No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	agronholm	apscheduler	One-off job incorrectly scheduled if scheduler timezone different from system timezone	https://github.com/agronholm/apscheduler/issues/133	https://github.com/agronholm/apscheduler/commit/7ef878c6b4504727b5640e9c66f07dc40ed9249a	5869	0.5081901638	2368	1	0	0		Timezone		Timezone Conversions			Medium	Medium	Low	Low		Comparing Timezones	Using Naïve Datetime Incorrectly		Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	TRUE	FALSE	sdispater	pendulum	RecursionError when add or subtract-ing with a fixed offset timezone	https://github.com/sdispater/pendulum/issues/422	https://github.com/sdispater/pendulum/pull/431	6109	0.506924129	6459	1	0	1		Other		Datetime Arithmetic			Low	Medium	Low	Low		TODO			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	pallets-eco	flask-session	can't compare offset-naive and offset-aware datetimes	https://github.com/pallets-eco/flask-session/issues/85	https://github.com/pallets-eco/flask-session/pull/100	487	0.5059789004	1459	1	0	0		Timezone		Datetime Comparison	Timezone Conversions		Low	Medium	Medium	Medium		Using Naïve Datetime Incorrectly			Specific	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	Initialize from existing `datetime.date` object?	https://github.com/sdispater/pendulum/issues/250	https://github.com/sdispater/pendulum/pull/732	6109	0.5044236127	2681	1	0	1		Date		Library Conversions	Datetime Construction		Low	Medium	High	Medium		Adding Support for New Features			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	trinodb	trino-python-client	Timestamp with time zone not mapped correctly	https://github.com/trinodb/trino-python-client/issues/366	https://github.com/trinodb/trino-python-client/pull/367	302	0.5032186542	1677	1	0	0		Timezone	Timestamps	Datetime Construction	Timezone Conversions		Low	Medium	High	Medium		Incorrect API usage			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	apache	airflow	datetime.utcnow and datetime.utcfromtimestamp are deprecated in Python 3.12	https://github.com/apache/airflow/issues/32344	https://github.com/apache/airflow/pull/35448	35031	0.5018147482	4244	1	0	1		Deprecated		Datetime Construction			Low	Low	High	Low		Outdated/Deprecated APIs			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	eclecticiq	OpenTAXII	Timestamps are incorrectly stored when the database is running in a non-UTC timezone.	https://github.com/eclecticiq/OpenTAXII/issues/138	https://github.com/eclecticiq/OpenTAXII/pull/139	182	0.4984190305	1718	1	0	0		Timezone		Datetime Construction			Low	Medium	Medium	Low		Using Naïve Datetime Incorrectly			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	timvink	mkdocs-git-revision-date-localized-plugin	`timezone` appears not to work	https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/issues/79	https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/pull/80	177	0.4970041183	1179	1	0	0		Timezone		Datetime Construction			Medium	Medium	Low	High		Typo			No	
3: Shrey Sasha	FALSE	FALSE	TRUE	TRUE	FALSE	agronholm	apscheduler	Infinite loop in CalendarIntervalTrigger with UTC timezone	https://github.com/agronholm/apscheduler/issues/897	https://github.com/agronholm/apscheduler/pull/898	5869	0.4965091183	1557	1	0	0		Timezone		Datetime Equality			Low	Medium	Medium	Low	INTERESTING	Unintuitive Arithmetic	Incorrect API usage		Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	python	cpython	Document the "gotcha" behaviors in utcnow() and utcfromtimestamp()	https://github.com/python/cpython/issues/81669	https://github.com/odoo-dev/odoo/commit/67ff28cef66214328f26b5f3187a9ee85f8d9204	60455	0.4962715993	3847	1	0	0		Timezone		Datetime Construction	Timezone Conversions		Medium	Medium	Low	Medium		Outdated/Deprecated APIs	Using Naïve Datetime Incorrectly		Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	TRUE	FALSE	ClickHouse	clickhouse-connect	Timezone-aware DateTime64 columns now returned missing the timezone info	https://github.com/ClickHouse/clickhouse-connect/issues/136	https://github.com/ClickHouse/clickhouse-connect/pull/137	272	0.4957090367	5069	1	1	0		Timezone		Datetime Construction			Low	Medium	Medium							
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	jcrist	msgspec	JSON encoder does not respect ZoneInfo (the IANA time zone database) when encoding datetime objects.	https://github.com/jcrist/msgspec/issues/533	https://github.com/jcrist/msgspec/pull/534	1972	0.4942254752	1157	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)			Medium	Medium	High	Medium	tzinfo gets shifted to utc automatically when it shouldnt be	Dropping Timezones	Compatibility Issues		Yes	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	xcube-dev	xcube	Address `xcube serve`  FutureWarning: timezone-naive DatetimeIndex with a timezone-aware datetime is deprecated	https://github.com/xcube-dev/xcube/issues/555	https://github.com/xcube-dev/xcube/commit/289a0447622d2de92dd74c35d9f062e7c12f181c	177	0.4935990551	1068	1	0	0		Timezone		Timezone Conversions			Low	Medium	Medium	Low	cant use tz aware indexes on tz unaware arrays	Using Naïve Datetime Incorrectly	Incorrect API usage	Outdated/Deprecated APIs	Yes	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	dbt-labs	dbt-core	[CT-3374] [Bug] test_utils.TestCurrentTimestamp.test_current_timestamp_matches_utc is failing for the MacOS runner	https://github.com/dbt-labs/dbt-core/issues/9057	https://github.com/dbt-labs/dbt-core/pull/9058	9138	0.4935733761	2752	1	0	0		Timestamps	Duration	Delta Comparison	Replacing/Rounding Datetime Components		Low	Medium	Low	Medium	what is causing the bug? could be interesting	Compatibility Issues			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	certtools	intelmq	Harmonization DateTime incorrect handling of naive time strings	https://github.com/certtools/intelmq/issues/2278	https://github.com/gethvi/intelmq/commit/213ab60985d5b4ab2d1e6923c5d588b5efaf0c1c	944	0.4929734988	3073	1	0	1		Timezone	String Representation	Timezone Conversions	String Parsing/Formatting (data)		Low	Medium	High	Medium		Using Naïve Datetime Incorrectly	Dropping Timezones		Yes	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	python	cpython	The time library documentation should include the field to catch microseconds in a date time string	https://github.com/python/cpython/issues/115315	https://github.com/python/cpython/pull/115316	60455	0.4923023908	3995	1	0	0																
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	igorbenav	fastcrud	Add Warning in Docs that only timezone aware data is supported	https://github.com/igorbenav/fastcrud/issues/92	https://github.com/igorbenav/fastcrud/pull/94	440	0.4904937534	1007	1	0	0																
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	googleapis	python-bigquery	Timestamp loss of precision in insert_rows	https://github.com/googleapis/python-bigquery/issues/392	https://github.com/googleapis/python-bigquery/pull/393	717	0.4902244991	2030	1	0	0		Timestamps		Timestamp/Hash Construction			Medium	Medium	Low	Low		Precision of Representation			No	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	DadosAbertosDeFeira	maria-quiteria	Remover warnings.warn("DateTimeField %s received a naive datetime (%s)"	https://github.com/DadosAbertosDeFeira/maria-quiteria/issues/239	https://github.com/rudaporto/maria-quiteria/commit/e01e56d1f0dd521c01c7e71dbf69f5a715308bb5	165	0.489698241	3042	1	0	0	Not in english															
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	python	typeshed	Unsupported operand types for + ("timedelta" and "datetime")	https://github.com/python/typeshed/issues/3538	https://github.com/lovasoa/typeshed/commit/fca03d64689dfbc617e506ca1600f8f6b9842f51	4139	0.4894073903	1126	1	0	0		Duration		Datetime Arithmetic			Low	Medium	Low	Low		TODO			Specific	
	TRUE	FALSE	FALSE	FALSE	FALSE	weewx	weewx	Daylight savings changeovers at midnight cause problems with daily summaries	https://github.com/weewx/weewx/issues/356	https://github.com/weewx/weewx/commit/0a5ee55d08262f12718f2367adb02d216fb7e610	974	0.489287511	1927	1	0	0		DST	Timestamps	Datetime Construction	Replacing/Rounding Datetime Components		Medium	Low	Medium	Medium		Crossing DST boundaries	Precision of Representation	Unintuitive Arithmetic	Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	pyopenapi	pyswagger	ISO 8601 timestamps with milliseconds are not parsed properly	https://github.com/pyopenapi/pyswagger/issues/83	https://github.com/pyopenapi/pyswagger/commit/9ff197972a6247f0f3849a625ec24acc1a35b6ab	381	0.4880820245	1868	1	0	0		String Representation	Timezone	Replacing/Rounding Datetime Components	String Parsing/Formatting (data)		Low	Medium	Medium	Low	parsing incorrectly so tz's are being dropped	Precision of Representation	Read/Write Naïve times		Yes	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	TRUE	ansible	ansibullbot	TypeError: unsupported operand type(s) for -: 'datetime.datetime' and 'NoneType'	https://github.com/ansible/ansibullbot/issues/1254	https://github.com/ansible/ansibullbot/pull/1270	203	0.4872717973	31974	1	0	0											the issue is so uninformative					
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	googleapis	python-bigquery-pandas	TST: dtype for BigQuery TIMESTAMP unexpectedly using datetime64[ns, UTC] dtype	https://github.com/googleapis/python-bigquery-pandas/issues/261	https://github.com/googleapis/python-bigquery-pandas/pull/262	425	0.4870506346	4424	1	0	0		Timezone		Timezone Conversions			Low	Medium	Low	Low	Simply ++ min pandas version	Outdated/Deprecated APIs			No	
	TRUE	FALSE	FALSE	FALSE	TRUE	ecederstrand	exchangelib	EWSDateTime.fromisoformat() throws exception when timezone is in the date string	https://github.com/ecederstrand/exchangelib/issues/1114	https://github.com/ecederstrand/exchangelib/commit/18dcaefc95ee081f4d9315ca2fe80a17f2d1e24b	1140	0.4864267767	1975	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	xcube-dev	xcube	Fix "Can't determine indexer timezone" warning	https://github.com/xcube-dev/xcube/issues/781	https://github.com/xcube-dev/xcube/pull/784	177	0.4855803739	1467	1	0	0																
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	apache	airflow	TimeSensorAsync breaks if target_time is timezone-aware	https://github.com/apache/airflow/issues/24736	https://github.com/apache/airflow/pull/25221	35031	0.4815872142	3303	1	0	1		Timezone		Timezone Conversions			Low	Medium	Low	Low	making it so everything is auto converted to utc	Dropping Timezones	Comparing Timezones	Compatibility Issues	No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	zulip	zulip	Make all datetimes timezone aware	https://github.com/zulip/zulip/issues/1539	https://github.com/TomaszKolek/zulip/commit/54851419bf17e0467c5fdfa01505214e5ed8f6a3	20271	0.4805717847	1595	1	0	0		Timezone		Datetime Construction			Low	Low	High	Low	just going from naive to tz aware; not rlly a bug	Using Naïve Datetime Incorrectly			No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	TRUE	psycopg	psycopg	Unable to use ZoneInfo with datetime.time	https://github.com/psycopg/psycopg/issues/652	https://github.com/psycopg/psycopg/commit/cde46f041678950f5225a65a8ba9f6a66503692c	1541	0.4803265007	1696	1	0	0											not a bug but incorrect api usage; should be false pos?					
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	richardpenman	whois	Some registrars have timezones for expiration, some don't	https://github.com/richardpenman/whois/issues/183	https://github.com/richardpenman/whois/pull/209	340	0.4797678369	2287	1	0	0		Timezone		Datetime Comparison	Timezone Conversions	Delta Construction	Low	Medium	Low	Low	 '-'ing tz-aware and naive dts	Using Naïve Datetime Incorrectly			Yes	
	TRUE	FALSE	FALSE	FALSE	TRUE	pandas-dev	pandas-stubs	Subtracting Timestamp from DatetimeIndex does not produce TimedeltaIndex	https://github.com/pandas-dev/pandas-stubs/issues/280	https://github.com/pandas-dev/pandas-stubs/pull/290	217	0.4782258114	1000	1	0	0																
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	python	cpython	Leap Year Calculation for Replace Function Causes day is out of range for month	https://github.com/python/cpython/issues/116175	https://github.com/python/cpython/pull/116176	60455	0.4773466267	1855	1	0	0	Adding 2 years to Feb 29										INTERESTING				Yes	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	stac-utils	stac-fastapi	sqlalchemy backend does not support non-interval datetime values	https://github.com/stac-utils/stac-fastapi/issues/256	https://github.com/stac-utils/stac-fastapi/pull/262	221	0.4772528976	3961	1	0	0		String Representation		String Parsing/Formatting (data)			Low	Medium	Low	Low	not sure if this is a false pos?	Adding Support for New Features	Incorrect Format Assumptions		No	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	opendatacube	datacube-core	API Query doctest fails due to different timezone representation	https://github.com/opendatacube/datacube-core/issues/1485	https://github.com/opendatacube/datacube-core/pull/1527	492	0.4757127454	1398	1	0	0																
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	pydantic	pydantic	Incorrect JSON output for a timedelta formed from subtracting two pd.Timestamps	https://github.com/pydantic/pydantic/issues/7095	https://github.com/pydantic/pydantic-core/pull/881	19350	0.475679894	2218	1	0	0											pandas problem					
	TRUE	FALSE	FALSE	FALSE	FALSE	dask-contrib	dask-sql	Timestamp improvements	https://github.com/dask-contrib/dask-sql/issues/982	https://github.com/dask-contrib/dask-sql/pull/973	372	0.475178856	1256	1	0	0		Timestamps		Timestamp/Hash Construction	Datetime Construction		Medium	Low	Medium	Medium		Precision of Representation	OOB Timestamps		Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	kennethreitz	maya	Inconsistent conversion of datetime slang	https://github.com/kennethreitz/maya/issues/36	https://github.com/kennethreitz/maya/pull/38	3407	0.4749997788	1396	1	0	1		Timezone		String Parsing/Formatting (humanized)	Querying Datetime Components		Medium	Medium	Medium	Low	Make benchmark for other libs	Using Naïve Datetime Incorrectly			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	tobymao	sqlglot	Transforming a presto literal timestamp query to duckdb	https://github.com/tobymao/sqlglot/issues/1779	https://github.com/tobymao/sqlglot/pull/1780	5871	0.4743360269	1836	1	0	0		Date		Delta Construction			Low	Medium	Medium	Low	INTERESTING (quarter=90d?!!)	Incorrect Format Assumptions			No	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	python-social-auth	social-core	UserMixin.expiration_timedelta() returns wrong value because timedelta is calculated using different timezones	https://github.com/python-social-auth/social-core/issues/128	https://github.com/python-social-auth/social-core/pull/129	832	0.4741014125	2224	1	0	0		Duration		Datetime Arithmetic	Delta Construction		Low	Medium	Low	Low	d = c + (a-b)	Using Naïve Datetime Incorrectly	Subtracting Dates		Specific	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	apache	airflow	airflow.dates.days_ago doesn't respect configured timezone	https://github.com/apache/airflow/issues/17720	https://github.com/apache/airflow/pull/20508	35031	0.473348432	5225	1	0	1																
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	art049	odmantic	pydantic ValidationError for datetime fields if microsecond is 999xyz	https://github.com/art049/odmantic/issues/99	https://github.com/art049/odmantic/pull/100	1002	0.4727722801	2059	1	0	0		String Representation		Datetime Construction	Replacing/Rounding Datetime Components	String Parsing/Formatting (data)	Medium	Medium	Low	Low	truncate usecs instead of round	Incorrect Format Assumptions	Precision of Representation		Yes	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	census-instrumentation	opencensus-python	all: refactor by extraction code for conversion from timestampStr to microseconds	https://github.com/census-instrumentation/opencensus-python/issues/328	https://github.com/census-instrumentation/opencensus-python/pull/327	663	0.4705395296	2589	1	0	0																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	python-openapi	openapi-core	Consider moving to isodate.parse_datetime as date time string unmarsaller	https://github.com/python-openapi/openapi-core/issues/235	https://github.com/python-openapi/openapi-core/pull/237	282	0.4672578992	1248	1	0	0		String Representation	Timezone	String Parsing/Formatting (data)	Datetime Construction		Low	Medium	Low	Low		Dropping Timezones			No	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	jschneier	django-storages	modified_time in s3boto3 raises ValueError: astimezone() cannot be applied to a naive datetime	https://github.com/jschneier/django-storages/issues/225	https://github.com/jschneier/django-storages/pull/226	2664	0.4669540982	1203	1	0	0		Timezone		Timezone Conversions			Low	High	Medium	Medium	make bm if can detect naive dts before localizing	Using Naïve Datetime Incorrectly	Dropping Timezones		Specific	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	facebookresearch	hydra	Support casting intervals to int	https://github.com/facebookresearch/hydra/issues/915	https://github.com/facebookresearch/hydra/pull/921	8326	0.4669486585	1453	1	0	0																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	TRUE	sdispater	pendulum	pendulum.DateTime using hardcoded pendulum.datetime in methods	https://github.com/sdispater/pendulum/issues/203	https://github.com/sdispater/pendulum/pull/707	6109	0.4660724547	1297	1	0	1											just refactoring for easier subclassing					
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	stac-utils	pystac-client	search result depends on datetime format	https://github.com/stac-utils/pystac-client/issues/644	https://github.com/stac-utils/pystac-client/pull/686	146	0.4648592497	8577	1	0	0		Timezone	String Representation	Timezone Conversions	String Parsing/Formatting (data)		Medium	Medium	Low	Medium		Using Naïve Datetime Incorrectly			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	sdispater	pendulum	Can't install pendulum with pip install -t	https://github.com/sdispater/pendulum/issues/20	https://github.com/sdispater/pendulum/pull/22	6109	0.4642691571	5763	1	0	1																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	deepcopy on DateTime produces incorrect offset in copy during dst transition	https://github.com/sdispater/pendulum/issues/767	https://github.com/sdispater/pendulum/commit/eab4f0e4bcd75468e463da3c5fc5eff60d37a696	6109	0.4613947502	2697	1	0	1		Fold	DST	Datetime Construction			High	Medium	Medium	Low		Creating time in unspecified fold			No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	gjcarneiro	yacron	wrong task start time(due to UTC)	https://github.com/gjcarneiro/yacron/issues/17	https://github.com/gjcarneiro/yacron/commit/84cf969eef6f957fa824d9973b892b9626d2de11	447	0.4594198086	1275	1	0	0		Timezone		Datetime Comparison			Low	Medium	Medium	Low	not sure what AC should be, since its "wrong start time"	Adding Support for New Features			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	influxdata	influxdb-client-python	Nanoseconds lost when pd.Timestamp is used as a query parameter	https://github.com/influxdata/influxdb-client-python/issues/455	https://github.com/influxdata/influxdb-client-python/pull/457	677	0.4578990733	1016	1	0	0		String Representation		String Parsing/Formatting (data)			Medium	Low	Low	Low		Precision of Representation			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	dateutil	dateutil	Allow tzinfos to return None	https://github.com/dateutil/dateutil/issues/661	https://github.com/dateutil/dateutil/pull/540	2266	0.4577893797	1295	1	0	0		Timezone		String Parsing/Formatting (data)	String Parsing/Formatting (humanized)	Datetime Construction	Medium	Low	Medium	Medium		Incorrect Format Assumptions	Dropping Timezones		Yes	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	echoboomer	incident-bot	[BUG] Timestamp mismatch	https://github.com/echoboomer/incident-bot/issues/453	https://github.com/echoboomer/incident-bot/pull/461	112	0.4570247449	2410	1	0	0		Timezone		Datetime Construction			Low	Medium	Medium	Low	mainly swapping out TZ provider	Library Bug			Specific	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	sdispater	pendulum	deepcopy of dict containing datetime  ~1000x slower with pendulum 1.4.1	https://github.com/sdispater/pendulum/issues/234	https://github.com/sdispater/pendulum/pull/235	6109	0.4567761658	2614	1	0	1																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	ccxt	ccxt	Python base cryptopia class do not fill datetime and timestamp correctly at parse_order method	https://github.com/ccxt/ccxt/issues/3351	https://github.com/ccxt/ccxt/commit/55a2643c35f41d51ec1ec04a2e1ab94f4d8609c3	31719	0.4550126348	2349	1	0	0		Timestamps		String Parsing/Formatting (data)			Low	Medium	Low	Low	doesn't parse datetime correctly; is this a false positive??	Incorrect Format Assumptions	Library Bug		Specific	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	dora-metrics	pelorus	convert_date_time_to_timestamp incorrectly handles timezones	https://github.com/dora-metrics/pelorus/issues/662	https://github.com/dora-metrics/pelorus/pull/664	238	0.4546595501	3465	1	0	0		Timezone	Timestamps	Timestamp/Hash Construction	Timezone Conversions		Low	Medium	Very High	High		Using Naïve Datetime Incorrectly			Yes	
5: Peter Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	Bad results using .replace() during DST transitioning off	https://github.com/sdispater/pendulum/issues/415	https://github.com/sdispater/pendulum/pull/414	6109	0.4538252292	1491	1	0	1		Fold	DST	Replacing/Rounding Datetime Components			High	Medium	Medium	Low		Creating time in unspecified fold			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	aws	aws-sdk-pandas	read_parquet with Pyarrow backed tries to tz_localize(tz="UTC") on already localised UTC timestamps	https://github.com/aws/aws-sdk-pandas/issues/2410	https://github.com/aws/aws-sdk-pandas/pull/2411	3834	0.4530123304	2018	1	0	0		Timezone		Timezone Conversions			Low	High	Medium	Medium		Using Naïve Datetime Incorrectly			Yes	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	heavyai	pymapd	TypeError: Invalid datetime unit in metadata string "[ns, UTC]" while inserting records into Timestamp column	https://github.com/heavyai/pymapd/issues/253	https://github.com/heavyai/pymapd/commit/1647bdd12cc8ac02a4b54eecc399c6159e5bf000	111	0.452256298	1372	1	0	0		Timezone	String Representation	String Parsing/Formatting (data)			Low	Medium	Medium	Low	doesn't support timezones	Compatibility Issues	Dropping Timezones		No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	dateutil	dateutil	tzlocal uses startup timezone; parse uses runtime timezone	https://github.com/dateutil/dateutil/issues/100	https://github.com/dateutil/dateutil/pull/101	2266	0.4518933849	1917	1	0	0		DST	Timezone	Datetime Construction			Medium	Medium	Medium	Medium		Unintuitive Arithmetic			No	
	TRUE	FALSE	FALSE	FALSE	TRUE	python	cpython	``test_datetime`` fails with a ``--forever`` argument	https://github.com/python/cpython/issues/120782	https://github.com/python/cpython/pull/120829	60455	0.4515686952	4191	1	0	0																
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	GenericMappingTools	pygmt	Test test_gmt_compat_6_is_applied leaves a gmt.conf file in the current directory	https://github.com/GenericMappingTools/pygmt/issues/453	https://github.com/GenericMappingTools/pygmt/pull/454	727	0.4514108412	1027	1	0	0																
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	opendatacube	datacube-core	Issue with time based datacube query using months as a query range	https://github.com/opendatacube/datacube-core/issues/585	https://github.com/opendatacube/datacube-core/commit/830ca0f7c1c3739aa7fde36bf4b413f08820f419	492	0.451305101	1159	1	0	0		Date	String Representation	Replacing/Rounding Datetime Components	String Parsing/Formatting (humanized)		Low	Medium	Medium	Medium	searching is not looking at the correct dates -- month 1-3 is supposed to be beginning of 1 to end of 3	Adding Support for New Features	Unintuitive Arithmetic		No	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	aws	aws-sdk-pandas	Incorrect error message or implementation for datetime formatting?	https://github.com/aws/aws-sdk-pandas/issues/2793	https://github.com/aws/aws-sdk-pandas/pull/2796	3834	0.4510631154	1457	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	GenericMappingTools	pygmt	Policy for minimum supported GMT versions	https://github.com/GenericMappingTools/pygmt/issues/2967	https://github.com/GenericMappingTools/pygmt/pull/3070	727	0.4508693985	2090	1	0	0																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	brython-dev	brython	datetime.strptime and time.strptime  don't parse dates with month > 9	https://github.com/brython-dev/brython/issues/1849	https://github.com/brython-dev/brython/commit/2e6b2fbcc80b65fdd62193a303e73cc38af6b766	6292	0.4500111221	2048	1	0	0		String Representation		String Parsing/Formatting (data)			Low	High	High	Medium	code change is js mainly	Incorrect Format Assumptions			No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	sktime	sktime	[BUG] `day_of_year` is not generated in `DateTimeFeatures` transformation	https://github.com/sktime/sktime/issues/3188	https://github.com/sktime/sktime/pull/3222	7514	0.4491603577	1687	1	0	0		Date		Querying Datetime Components			Low	Medium	High	Low	wrong retrieval?	Incorrect API usage	Incorrect Format Assumptions		No	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	census-instrumentation	opencensus-python	datetime parsing in tracer fails sometimes	https://github.com/census-instrumentation/opencensus-python/issues/547	https://github.com/census-instrumentation/opencensus-python/pull/552	663	0.4487905736	1604	1	0	0		Timestamps	String Representation	String Parsing/Formatting (data)	String Parsing/Formatting (humanized)		High	Medium	Low	Medium	same as 234	Incorrect Format Assumptions	Library Bug		Yes	
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	python	cpython	datetime.replace() is very slow	https://github.com/python/cpython/issues/112919	https://github.com/eltoder/cpython/commit/0f5eddbf371bf86a1a39a108075a1a8de2ea90cc	60455	0.4449616097	1129	1	0	0																
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	jcrist	msgspec	Expand `datetime` support	https://github.com/jcrist/msgspec/issues/220	https://github.com/jcrist/msgspec/pull/221	1972	0.4447710535	17302	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	SEED-platform	seed	Strftime fails for buildings older than 1900	https://github.com/SEED-platform/seed/issues/1439	https://github.com/SEED-platform/seed/pull/1444	106	0.4442925925	1652	1	0	0		Date		Datetime Construction			Medium	High	Medium	Low		OOB Datetimes			Yes	
3: Shrey Sasha	FALSE	FALSE	TRUE	TRUE	FALSE	O365	python-o365	PYTZ removal causes errors in latest release	https://github.com/O365/python-o365/issues/1011	https://github.com/O365/python-o365/pull/1038	1586	0.4403064509	8747	1	0	0																
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	FALSE	googleapis	python-storage	Accessing blob.custom_time errors on 0 microsecond timestamp	https://github.com/googleapis/python-storage/issues/363	https://github.com/googleapis/python-storage/pull/371	420	0.4400521562	3395	1	0	0		Timestamps	String Representation	String Parsing/Formatting (humanized)	String Parsing/Formatting (data)	Replacing/Rounding Datetime Components	High	Medium	Low	Medium	high obsc bc issue only happens when ms is 0	Incorrect Format Assumptions	Library Bug		Yes	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	Pycord-Development	pycord	Task repeats a Hundred Billion Times when task's timezone is not UTC	https://github.com/Pycord-Development/pycord/issues/2187	https://github.com/Pycord-Development/pycord/pull/2196	2671	0.4367994297	4114	1	0	0		Timezone	Timestamps	Timezone Conversions	String Parsing/Formatting (data)		High	Medium	Medium	High	im so confused idk wtf is going on???? INTERESTING / FUNNY	Library Bug			No	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	Pendulum can not find timezone on Alpine docker, resulting in `.now()` being broken	https://github.com/sdispater/pendulum/issues/715	https://github.com/sdispater/pendulum/commit/879250702da7e2f51e27c122d8d53cbbb3b734fd	6109	0.4363678703	2805	1	0	1		Timezone		Datetime Construction			Medium	High	Low	Low	INTERESTING (astz() with no local tz)	Using Naïve Datetime Incorrectly			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	pydantic	pydantic	Serialization -> de-serialisation fails for small timedelta (< 100 microseconds)	https://github.com/pydantic/pydantic/issues/3315	https://github.com/pydantic/pydantic/pull/3346	19350	0.435709689	2181	1	0	0		Duration		Delta Construction	String Parsing/Formatting (data)		Medium	Medium	Low	Low	passing scientific notation	Precision of Representation	Incorrect Format Assumptions		Specific	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	TRUE	tobymao	sqlglot	`INTERVAL DAY` used as a type is not parsed as a `sqlglot.exp.DataType` for the postgres dialect	https://github.com/tobymao/sqlglot/issues/2694	https://github.com/tobymao/sqlglot/pull/2698	5871	0.4341066956	1429	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	pandas-dev	pandas-stubs	BUG: Unsupported operand types for DatetimeIndex, Timestamp and datetime	https://github.com/pandas-dev/pandas-stubs/issues/74	https://github.com/pandas-dev/pandas-stubs/pull/79	217	0.4331407099	1004	1	0	0	duration as in range of time	Duration	Timestamps	Datetime Comparison			Low	Medium	Medium	Medium		TODO			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	GoogleCloudPlatform	professional-services-data-validator	validate row: Spanner TIMESTAMP Throws Exception	https://github.com/GoogleCloudPlatform/professional-services-data-validator/issues/767	https://github.com/GoogleCloudPlatform/professional-services-data-validator/commit/9dc947d6e0972f8aa384f1056ae9a24344183596	382	0.4323078068	1069	1	0	0		String Representation		String Parsing/Formatting (data)			Low	Medium	Very High	Medium	A library update happened to fix it	Library Bug			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	TRUE	xlwings	xlwings	sometimes, datetime objects in lists don't get formatted on Excel (Windows only)	https://github.com/xlwings/xlwings/issues/43	https://github.com/xlwings/xlwings/commit/48bba0c6a7156fd73016d9e0cc5e0dba3379b3c1	2874	0.4320644732	1136	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	tobymao	sqlglot	Optimizer Error - CAST(string column) + time interval	https://github.com/tobymao/sqlglot/issues/918	https://github.com/tobymao/sqlglot/pull/922	5871	0.4298240087	1459	1	0	0		Date	Timestamps	Datetime Arithmetic	Datetime Construction		Low	Medium	High	Medium		TODO			No	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	TRUE	nextstrain	augur	filter: Grouping by `day` works when it shouldn't	https://github.com/nextstrain/augur/issues/1069	https://github.com/nextstrain/augur/pull/1070	265	0.429821374	1013	1	0	0																
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	O365	python-o365	Timezone issues on IBM Cloud Functions	https://github.com/O365/python-o365/issues/257	https://github.com/O365/python-o365/commit/ad061bc9754f589c919e06941397aa5e50133f45	1586	0.4284782281	3640	1	0	0		Timezone		Datetime Construction			Low	High	Low	Low	It's not a bug in *this* library, but it's arguably still a bug	Incorrect API usage			No	
	TRUE	FALSE	FALSE	FALSE	FALSE	danielgtaylor	python-betterproto	Timestamp bad parsing	https://github.com/danielgtaylor/python-betterproto/issues/407	https://github.com/Gobot1234/python-betterproto/commit/193c9137c3af9f4a88aa3f75d56429314243d510	1423	0.42779501	9372	1	0	0		Timestamps		Datetime Construction			Medium	Medium	Medium	Medium		OOB Timestamps	Library Bug		Yes	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	sdispater	pendulum	Duration methods (total_days(), in_days()) return incorrect values and/or do not match docs	https://github.com/sdispater/pendulum/issues/475	https://github.com/sdispater/pendulum/pull/482	6109	0.4277014632	2924	1	0	1		Duration		Querying Datetime Components			Low	Medium	High	High		Unintuitive Arithmetic			Yes	
1: Shrey Peter	FALSE	FALSE	TRUE	FALSE	FALSE	scrapinghub	dateparser	Timezone confusion (mine)	https://github.com/scrapinghub/dateparser/issues/212	https://github.com/scrapinghub/dateparser/pull/235	2480	0.4273058764	1198	1	0	0		Timezone	String Representation	String Parsing/Formatting (humanized)	Datetime Construction		Low	Medium	High	Medium		Incorrect Format Assumptions			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	quantopian	trading_calendars	"TypeError: data is already tz-aware UTC" in get_calendar()	https://github.com/quantopian/trading_calendars/issues/45	https://github.com/quantopian/trading_calendars/pull/48	605	0.4270354022	1261	1	0	0		Timezone		Datetime Construction			Low	Medium	Very High	Low		Compatibility Issues			No	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	zulip	zulip	Replace naive datetimes in the asana, basecamp, and codebase integrations.	https://github.com/zulip/zulip/issues/3809	https://github.com/roberthoenig/zulip/commit/f07704b6018505b510d27543e34fa9bda590c5f5	20271	0.4270049814	2106	1	0	0		Timezone		Datetime Construction	Library Conversions		Medium	Medium	Medium	Low	adding tz info for naive datetime objects; library conv bc they imported pytz	Using Naïve Datetime Incorrectly	Compatibility Issues	Adding Support for New Libraries	Specific	
2: Shrey Serena	FALSE	FALSE	TRUE	FALSE	FALSE	jcrist	msgspec	Retain timezone offset for datetime	https://github.com/jcrist/msgspec/issues/384	https://github.com/jcrist/msgspec/pull/391	1972	0.4268266929	3394	1	0	0		Timezone		Timezone Conversions	Datetime Construction		Medium	Low	Medium	Medium	med/high obsc bc it doesnt/hasnt broken anything yet; also false pos bc its in c/rust??	Dropping Timezones			No	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	pydantic	pydantic	Date string coerced to datetime infers timezone	https://github.com/pydantic/pydantic/issues/8762	https://github.com/pydantic/pydantic-core/pull/1193	19350	0.4257122641	2670	1	0	0		Timezone		Datetime Construction			Low	Medium	Low	Low	assuming dt is utc	Using Naïve Datetime Incorrectly			Specific	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	NatLibFi	Annif	Problem parsing timestamps from Maui Server	https://github.com/NatLibFi/Annif/issues/431	https://github.com/NatLibFi/Annif/commit/bd1c68f8933db6ba183b0771bfd6e211cd9f19c9	186	0.4251568676	1144	1	0	0		Timezone		String Parsing/Formatting (data)			Medium	High	High	Medium		Incorrect Format Assumptions			Yes	
6: Serena Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	ibis-project	ibis	feat: support 2+ arguments to `ibis.interval()`	https://github.com/ibis-project/ibis/issues/5983	https://github.com/ibis-project/ibis/pull/6138	4407	0.4243198527	1121	1	0	0																
4: Peter Serena	FALSE	FALSE	TRUE	FALSE	TRUE	ecederstrand	exchangelib	EWSTimeZone errors out on dateutil.tz.UTC and dateutil local time zones	https://github.com/ecederstrand/exchangelib/issues/919	https://github.com/ecederstrand/exchangelib/commit/45da45f9b86bab69036d739d6dfcfce9a244a8e7	1140	0.4233982026	5858	1	0	0																
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	nautobot	nautobot	Weekly job executing after 6 days instead of 7	https://github.com/nautobot/nautobot/issues/2426	https://github.com/nautobot/nautobot/pull/2670	922	0.4229286636	1781	1	0	0		Date		Datetime Construction	Datetime Arithmetic		Medium	Medium	Low	Low	INTERESTING	Incorrect Format Assumptions			Yes	
	TRUE	FALSE	FALSE	FALSE	FALSE	GoogleCloudPlatform	professional-services-data-validator	validate column: error handling a very large timestamp '9999-12-31 23:59:59'	https://github.com/GoogleCloudPlatform/professional-services-data-validator/issues/1053	https://github.com/GoogleCloudPlatform/professional-services-data-validator/pull/1117	382	0.422801515	4198	1	0	0		String Representation	Timestamps	String Parsing/Formatting (data)	Replacing/Rounding Datetime Components		Medium	Medium	High	Medium		OOB Times			Specific	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	FALSE	frictionlessdata	frictionless-py	Pandas warning "Comparison of Timestamp"	https://github.com/frictionlessdata/frictionless-py/issues/1210	https://github.com/frictionlessdata/frictionless-py/pull/1338	683	0.4222483268	2405	1	0	0		Deprecated		Datetime Comparison			Low	Low	Medium	Low		Outdated/Deprecated APIs			Yes	
3: Shrey Sasha	FALSE	FALSE	TRUE	FALSE	TRUE	zulip	zulip	lint: Add lint rules that make it harder to introduce naive timezones.	https://github.com/zulip/zulip/issues/3999	https://github.com/zulip/zulip/commit/342a80c3dee8000ea495834f93bfb06508351de3	20271	0.4211287326	2001	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	archesproject	arches	Importing datetime values require a timezone, but should be optional	https://github.com/archesproject/arches/issues/9708	https://github.com/archesproject/arches/pull/10836	208	0.4200331146	1573	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pynamodb	PynamoDB	UTCDateTimeAttribute serializes with a format where the month precedes the day, but deserializes with arguments that specify the day precedes the month	https://github.com/pynamodb/PynamoDB/issues/109	https://github.com/pynamodb/PynamoDB/pull/110	2391	0.4192515562	1070	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-telegram-bot	python-telegram-bot	Naive datetime should be treated as local timezone. UTC datetimes should be timezone aware.	https://github.com/python-telegram-bot/python-telegram-bot/issues/1658	https://github.com/python-telegram-bot/python-telegram-bot/commit/103b115486fd075f3f7eac9780d1e5dc538f4176	25168	0.4184606001	2532	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	datetime object does not preserve POSIX timestamp	https://github.com/python/cpython/issues/85290	https://github.com/instaloader/instaloader/pull/1546	60455	0.4169617097	2761	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	googleapis	python-api-core	Drop use of pytz	https://github.com/googleapis/python-api-core/issues/73	https://github.com/googleapis/python-api-core/pull/74	112	0.4161961089	2022	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	RhetTbull	osxphotos	utc to local timezone handling wrong	https://github.com/RhetTbull/osxphotos/issues/1356	https://github.com/RhetTbull/osxphotos/pull/1357	1798	0.4161188741	3172	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-humanize	humanize	"27 years from now" tests fail on platforms with 32-bit `time_t` (y2k38 problem)	https://github.com/python-humanize/humanize/issues/176	https://github.com/mgorny/humanize/commit/14d9ba9443e26a872c30afcedfae036456cf5010	395	0.4150950735	12560	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-humanize	humanize	Negative amounts of time result in `a day` from naturaldelta	https://github.com/python-humanize/humanize/issues/171	https://github.com/python-humanize/humanize/pull/173	395	0.4145442258	2721	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	dateparser.parse('02/2013', ['%m/%Y']) gives wrong datetime	https://github.com/scrapinghub/dateparser/issues/607	https://github.com/scrapinghub/dateparser/pull/611	2480	0.4145045553	2583	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	influxdata	influxdb-client-python	Replace deprecated call to `datetime.utcfromtimestamp`	https://github.com/influxdata/influxdb-client-python/issues/603	https://github.com/influxdata/influxdb-client-python/pull/652	677	0.4130758306	1315	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	Azure	azure-functions-durable-python	context.create_timer() fails when microseconds = 0	https://github.com/Azure/azure-functions-durable-python/issues/220	https://github.com/Azure/azure-functions-durable-python/pull/228	130	0.4129809866	3446	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-telegram-bot	python-telegram-bot	[BUG] Job_queue is skipping job if timezone is not provided for job.run_daily	https://github.com/python-telegram-bot/python-telegram-bot/issues/1693	https://github.com/python-telegram-bot/python-telegram-bot/pull/1696	25168	0.4122585315	2710	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Consider releasing Pendulum 3 or 2.1.2 with patches	https://github.com/sdispater/pendulum/issues/753	https://github.com/anomaly/lab-python-server/commit/a830530a466e1b38a08458b7aaad6f5ca02e06d4	6109	0.410853292	3757	1	0	1																
	TRUE	FALSE	FALSE	FALSE	TRUE	facebookresearch	fairseq	Train on gpu - about 1 day to 7 epochs	https://github.com/facebookresearch/fairseq/issues/301	https://github.com/facebookresearch/fairseq/commit/4de5826038bbdefd21f08df70c135b2c17bc2c76	29583	0.4108506354	21504	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	zulip	zulip	populate_db: Add support for creating messages older than 5 days ago	https://github.com/zulip/zulip/issues/21646	https://github.com/zulip/zulip/pull/21678	20271	0.4103652137	3041	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	jazzband	icalevents	Windows timezones raise dateutil rrule exception	https://github.com/jazzband/icalevents/issues/56	https://github.com/jazzband/icalevents/pull/80	157	0.4101475989	1069	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	GenericMappingTools	pygmt	pygmt-session [ERROR]: GMT_COMPATIBILITY: Expects values from 6 to 6; reset to 6.	https://github.com/GenericMappingTools/pygmt/issues/428	https://github.com/GenericMappingTools/pygmt/pull/432	727	0.4097987632	4564	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	evroon	bracket	Datetime issues when Postgres database has a timezone set.	https://github.com/evroon/bracket/issues/676	https://github.com/evroon/bracket/pull/677	148	0.409499849	2914	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	start_of('week') and day_of_week inconsistent	https://github.com/sdispater/pendulum/issues/683	https://github.com/sdispater/pendulum/pull/731	6109	0.4093161756	1351	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	When leap the years ,There are something about  the function of  "week_of_month"	https://github.com/sdispater/pendulum/issues/598	https://github.com/sdispater/pendulum/pull/766	6109	0.408990071	1193	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	When leap the years ,There are something about  the function of  "week_of_month"	https://github.com/sdispater/pendulum/issues/598	https://github.com/sdispater/pendulum/commit/84497bb2cab964be0a470596e21eade6d64a7846	6109	0.408990071	1193	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	facebookresearch	fairseq	Valid On 'valid' subset  appears multiple times in the same epoch.	https://github.com/facebookresearch/fairseq/issues/259	https://github.com/facebookresearch/fairseq/commit/527e822b3a6197a85ed5c3331cfc1dcb94292d2b	29583	0.4085269059	1849	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	hardbyte	python-can	ASCWriter logging inaccurate timestamps	https://github.com/hardbyte/python-can/issues/468	https://github.com/hardbyte/python-can/pull/469	1198	0.4083607478	1309	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	unionai-oss	pandera	`Check.in_range` not working properly with `Timedelta` types	https://github.com/unionai-oss/pandera/issues/618	https://github.com/unionai-oss/pandera/pull/621	3095	0.4083286523	1647	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	DeprecationWarning: datetime.utcfromtimestamp() is deprecated	https://github.com/dateutil/dateutil/issues/1284	https://github.com/beeware/briefcase/pull/1290	2266	0.4078715906	1953	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pytorch	ignite	[Feature Request] Setting # train steps per epoch	https://github.com/pytorch/ignite/issues/226	https://github.com/pytorch/ignite/pull/351	4476	0.4075055886	5080	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	AgentOps-AI	agentops	Incorrect timezone representation in get_ISO_time	https://github.com/AgentOps-AI/agentops/issues/46	https://github.com/AgentOps-AI/agentops/pull/47	907	0.4074286934	1211	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdv-dev	RDT	Can we support additional datetime formats?	https://github.com/sdv-dev/RDT/issues/439	https://github.com/sdv-dev/RDT/pull/458	112	0.406191445	1291	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	subzeroid	instagrapi	[BUG] clip.duration is NoneType	https://github.com/subzeroid/instagrapi/issues/386	https://github.com/subzeroid/instagrapi/commit/8539a48d2e152fa9ecff2144d3a5703a9e948466	3892	0.4044956486	1495	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	PrefectHQ	prefect	Validation error using default interval schedule in `prefect deploy`	https://github.com/PrefectHQ/prefect/issues/12834	https://github.com/PrefectHQ/prefect/pull/12833	15193	0.402382073	3132	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	parser doesn't seem to properly parse exif formatted datetime	https://github.com/sdispater/pendulum/issues/101	https://github.com/emattiza/pendulum/commit/d50333e840ebe68e646cf96d54c705f16ac445a8	6109	0.4019571496	1519	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	robotframework	robotframework	DateTime: DST problems when calculating with dates	https://github.com/robotframework/robotframework/issues/2018	https://github.com/robotframework/robotframework/commit/29a8a226733fee097ac71b628fad2f72512e022b	9279	0.4012927115	4628	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	apache	airflow	assignment to dag.timezone	https://github.com/apache/airflow/issues/27903	https://github.com/apache/airflow/pull/28400	35031	0.4012133989	2835	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	freach	udatetime	Support for variable length fraction seconds	https://github.com/freach/udatetime/issues/15	https://github.com/freach/udatetime/commit/458eeaf7fba4ac1a6d87d6321bce175f094cd95c	241	0.3999412547	1277	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	rpy2	rpy2	rpy2.robjects.POSIXct([datetime]) does not work	https://github.com/rpy2/rpy2/issues/914	https://github.com/rpy2/rpy2/pull/917	517	0.3995465559	2550	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	spedas	pyspedas	TIme-zone dependent behaviour when passing in `datetime.datetime` objects as `trange` inputs.	https://github.com/spedas/pyspedas/issues/487	https://github.com/spedas/pyspedas/commit/9b502233cf187e472a05a6b8988e878cff5bc06b	142	0.3992420776	2093	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	djc	couchdb-python	Why not microsecond?	https://github.com/djc/couchdb-python/issues/292	https://github.com/djc/couchdb-python/pull/293	200	0.3990568503	1473	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	apache	airflow	Task and dagrun duration y-axis is incorrect if the last task has a different duration unit	https://github.com/apache/airflow/issues/38371	https://github.com/apache/airflow/pull/38374	35031	0.3990044156	2416	1	0	1		Duration	String Representation	String Parsing/Formatting (data)	Delta Arithmetic		Medium	Low	Medium	Medium		Precision of Representation			Specific	
	FALSE	FALSE	FALSE	FALSE	FALSE	PrefectHQ	prefect	CronSchedule validation fails when provided with a timezone	https://github.com/PrefectHQ/prefect/issues/9535	https://github.com/ajwadjaved/prefect/commit/a63c332e683fb5a26e9a6d263a6483b8a6801597	15193	0.3984715804	3243	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	alteryx	woodwork	Cannot set time index while specifying Datetime Logical Type with string	https://github.com/alteryx/woodwork/issues/278	https://github.com/alteryx/woodwork/pull/279	139	0.3972632367	2103	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	capless	warrant	invalid strftime in aws_srp.py	https://github.com/capless/warrant/issues/21	https://github.com/capless/warrant/pull/28	465	0.3967312124	1595	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	electricitymaps	electricitymaps-contrib	New Zealand parser broke in new arrow	https://github.com/electricitymaps/electricitymaps-contrib/issues/2416	https://github.com/peterhughgriffin/electricitymap-contrib/commit/cbe69b8ff952c5a46e9f31dc3eb90bafd5cc097a	3342	0.3966540074	2094	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	netbox-community	netbox	"Current time" displayed under script/report schedule displays in wrong timezone	https://github.com/netbox-community/netbox/issues/11384	https://github.com/netbox-community/netbox/commit/0669fda1fd2794ee8a472727fdca1e33c4929431	15216	0.3965388553	1767	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sqlalchemy	sqlalchemy	Support for Oracle "timestamp with local timezone"	https://github.com/sqlalchemy/sqlalchemy/issues/9086	https://github.com/sqlalchemy/sqlalchemy/commit/a37218a8e0fa03acd0eef2d57e0294cd6e96fa84	9045	0.3957780025	5606	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	triton-inference-server	server	Incorrect last_inference_timestamp_milliseconds values in api/status output in 1.10.0	https://github.com/triton-inference-server/server/issues/1222	https://github.com/triton-inference-server/server/pull/1249	7598	0.3954941762	2873	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	samuelcolvin	dirty-equals	unix datetime tests fail if TZ != UTC	https://github.com/samuelcolvin/dirty-equals/issues/33	https://github.com/samuelcolvin/dirty-equals/pull/81	776	0.3942842873	14200	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	Georgia: Martin Luther King Day	https://github.com/vacanza/python-holidays/issues/25	https://github.com/vacanza/python-holidays/commit/ce59484b74e023ce42af339e291df2811ffefb4b	1375	0.3942710698	2850	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	vnpy	vnpy	bar显示K线图时报错TypeError: can't compare offset-naive and offset-aware datetimes	https://github.com/vnpy/vnpy/issues/2900	https://github.com/vnpy/vnpy/commit/f989b86b79bbcb6bc4c1a49309aa672ce35aa1ca	23787	0.3930824816	1674	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	mathiasertl	django-ca	command sign_cert: can't compare offset-naive and offset-aware datetimes	https://github.com/mathiasertl/django-ca/issues/29	https://github.com/redNixon/django-ca/commit/3c9411db05a0cae62ad3b7c5da62e4e8ea7eca21	135	0.3924425528	3070	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	Alexey-T	CudaText	Problem with initial display of text having folding	https://github.com/Alexey-T/CudaText/issues/1439	https://github.com/Alexey-T/CudaText/commit/abaa7fd80c2b21d60043672490f04c19edc3cbaa	2371	0.3918181178	1132	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	GenericMappingTools	pygmt	GMT prints incorrect command line string if a list of arguments is passed	https://github.com/GenericMappingTools/pygmt/issues/3205	https://github.com/GenericMappingTools/gmt/pull/8461	727	0.3915386018	2447	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	HandyHat	ha-hildebrandglow-dcc	Daylight Savings Time	https://github.com/HandyHat/ha-hildebrandglow-dcc/issues/238	https://github.com/HandyHat/ha-hildebrandglow-dcc/pull/282	225	0.3908722357	1387	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Test failure: test_tzlocal_offset_equal[GMT-tzoff1] (dateutil 2.8.0)	https://github.com/dateutil/dateutil/issues/918	https://github.com/dateutil/dateutil/pull/928	2266	0.3905171625	11087	1	0	0		Timezone		Timezone Conversions	Querying Datetime Components		High	Low	Low	Low		Typo	Comparing Timezones		Specific	
	FALSE	FALSE	FALSE	FALSE	FALSE	psycopg	psycopg	unknown PostgreSQL timezone: 'Europe/Berlin'; will use UTC when select any data with timestamptz datatype on Windows	https://github.com/psycopg/psycopg/issues/223	https://github.com/psycopg/psycopg/commit/ee92362683cf1b5fdbb78e21f3f6d220b84f492f	1541	0.3884848328	1484	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ietf-tools	datatracker	Incorrect time zone labeling for regions observing Daylight/Summer time	https://github.com/ietf-tools/datatracker/issues/5920	https://github.com/ietf-tools/datatracker/pull/5922	516	0.3877497927	1595	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	snowflakedb	snowflake-connector-python	SNOW-1444940: Write to pandas with datetime with timezone has no timezone in the resulting dataframe	https://github.com/snowflakedb/snowflake-connector-python/issues/1952	https://github.com/snowflakedb/snowflake-connector-python/pull/1954	565	0.3875799413	12183	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	obsidianforensics	unfurl	Issue parsing DotNet timestamps	https://github.com/obsidianforensics/unfurl/issues/130	https://github.com/obsidianforensics/unfurl/pull/132	583	0.3873459776	1918	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dbt-labs	dbt-core	[Bug] Integration test gives an error for the JST timezone	https://github.com/dbt-labs/dbt-core/issues/7664	https://github.com/dbt-labs/dbt-core/pull/7665	9138	0.3864319815	3533	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Inconsistent behaviour when dealing with dates close to year 0	https://github.com/dateutil/dateutil/issues/293	https://github.com/dateutil/dateutil/pull/297	2266	0.3858738874	1930	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	neo4j	neo4j-python-driver	Microsecond bug in neo4j.time.DateTime.to_native()	https://github.com/neo4j/neo4j-python-driver/issues/525	https://github.com/robsdedude/neo4j-python-driver/commit/ce79f6732a948553e0fbd889e629e637a615d35c	877	0.3857216703	3786	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	datetime.datetime.utcnow should return a UTC timestamp	https://github.com/python/cpython/issues/56965	https://github.com/pyrogram/pyrogram/pull/966	60455	0.3841744209	8844	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	cherrypy	cherrypy	Local time is used as utc time in LazyRfc3339UtcTime	https://github.com/cherrypy/cherrypy/issues/1991	https://github.com/cherrypy/cherrypy/pull/1992	1798	0.3837094778	1659	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	holoviz	panel	DatetimeRangeSlider returns datetime.date instead of datetime.datetime	https://github.com/holoviz/panel/issues/5953	https://github.com/holoviz/panel/pull/5954	4349	0.3819700415	1353	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	SecurityInnovation	PGPy	pgpy signature creation times don't handle timestamps well	https://github.com/SecurityInnovation/PGPy/issues/291	https://github.com/dkg/PGPy/commit/63b20e55a5ed6739b5383c627aaa96ea7221972b	306	0.3813927848	1620	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Parser error with unambiguous date in year 31	https://github.com/dateutil/dateutil/issues/687	https://github.com/dateutil/dateutil/commit/b99a98c72582a49f7b10f2abd1e09f2518d4ed66	2266	0.3804974721	2760	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ranaroussi	pystore	Issues with nanoseconds	https://github.com/ranaroussi/pystore/issues/25	https://github.com/ranaroussi/pystore/commit/6d3a4c3b55f4f8882fa052eeffb1b927e58346b6	540	0.3803367749	1285	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-humanize	humanize	naturaldelta with negative seconds loses precision and doesn't match naturaltime	https://github.com/python-humanize/humanize/issues/18	https://github.com/python-humanize/humanize/pull/173	395	0.3765064481	1229	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Pendulum drops time when parsing ISO8601 date	https://github.com/sdispater/pendulum/issues/84	https://github.com/sdispater/pendulum/commit/26a749b36130f851499f0789ebc8f79d75af0528	6109	0.37618376	1069	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	pymedusa	Medusa	[APP SUBMITTED]: TypeError: unsupported type for timedelta days component: unicode	https://github.com/pymedusa/Medusa/issues/1455	https://github.com/pymedusa/Medusa/commit/28eb5742a9d03bea585a8d113b9c3a5706e52d7c	1733	0.3757533486	2487	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	tournesol-app	tournesol	[back] Comparison export should include week-timestamp	https://github.com/tournesol-app/tournesol/issues/1299	https://github.com/tournesol-app/tournesol/pull/1324	318	0.3754475136	1333	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	robotframework	robotframework	DateTime: `Convert Date` changes time part when close to DTS boundary	https://github.com/robotframework/robotframework/issues/2130	https://github.com/robotframework/robotframework/commit/d504bea57693d3520b84d721c98c1f269686c503	9279	0.3746720373	1348	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	daq-tools	kotori	Compatibility with Terkin: Timestamps are not accepted	https://github.com/daq-tools/kotori/issues/68	https://github.com/daq-tools/kotori/pull/79	106	0.3727998273	2147	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	mvantellingen	python-zeep	Using zeep in Django with USE_TZ setting causes "can't compare offset-naive and offset-aware datetimes" error	https://github.com/mvantellingen/python-zeep/issues/97	https://github.com/tkocmathla/python-zeep/commit/9e5a2deee6367ba66097cbea75e287039eaac479	1867	0.3726451116	1432	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	scikit-learn-contrib	category_encoders	CountEncoder incorrectly counts Timestamp columns	https://github.com/scikit-learn-contrib/category_encoders/issues/412	https://github.com/scikit-learn-contrib/category_encoders/pull/415	2381	0.3721964355	2728	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pretalx	pretalx	Moment Timezone database seems out of date	https://github.com/pretalx/pretalx/issues/1421	https://github.com/pretalx/pretalx/commit/696a148d48601b3862e62c1d3bbc6961218a46d6	671	0.3710084877	1243	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	maximdanilchenko	aiochclient	microseconds are lost for datetime unconvert	https://github.com/maximdanilchenko/aiochclient/issues/58	https://github.com/maximdanilchenko/aiochclient/commit/2168222038552bbb83b7fba243e59ea0cd0228e9	236	0.3706793509	2514	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pvlib	pvlib-python	get_psm3 with tmy will not ignore interval	https://github.com/pvlib/pvlib-python/issues/1702	https://github.com/pvlib/pvlib-python/pull/1712	1103	0.3706365596	1141	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic	time ignores timedelta without error	https://github.com/pydantic/pydantic/issues/1744	https://github.com/pydantic/pydantic/pull/1814	19350	0.3696437811	1845	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	apache	airflow	schedule_interval can break tree view	https://github.com/apache/airflow/issues/225	https://github.com/apache/airflow/pull/235	35031	0.3690640451	1339	1	0	1		Duration		Datetime Arithmetic	Delta Arithmetic	Replacing/Rounding Datetime Components	Medium	Medium	Medium	Medium		Subtracting Dates			No	
	FALSE	FALSE	FALSE	FALSE	FALSE	PrefectHQ	prefect	Deployment's Schedule incorrectly shows the timezone as "UTC"	https://github.com/PrefectHQ/prefect/issues/11924	https://github.com/PrefectHQ/prefect-ui-library/pull/2090	15193	0.3685717467	1891	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	jpmml	sklearn2pmml	DaysSinceYearTransformer does not persist year parameter	https://github.com/jpmml/sklearn2pmml/issues/184	https://github.com/jpmml/sklearn2pmml/commit/90b4b2c8cddefd2c8ade15978ff6468ea797cc31	681	0.3680672436	1697	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	aminalaee	sqladmin	Support datetime.timedelta field	https://github.com/aminalaee/sqladmin/issues/327	https://github.com/aminalaee/sqladmin/pull/438	1651	0.3674819079	1162	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	kennethreitz	maya	Should Return 'UTC' if get_localzone returns an invalid pytz zone name.	https://github.com/kennethreitz/maya/issues/89	https://github.com/ibigpapa/maya/commit/8bdd5c65fafdad3a6340e248d8c55161aea77221	3407	0.3668084107	1929	1	0	1																
	TRUE	FALSE	FALSE	FALSE	FALSE	apache	airflow	Recent changes to timezone support broke some operators	https://github.com/apache/airflow/issues/34673	https://github.com/apache/airflow/pull/34683	35031	0.3666677486	13445	1	0	1		Timezone	Timestamps	Querying Datetime Components	Library Conversions		Medium	Medium	Medium	Medium		Adding Support for New Features			No	
	FALSE	FALSE	FALSE	FALSE	FALSE	fossasia	open-event-server	Convert API datetime format to iso8601	https://github.com/fossasia/open-event-server/issues/1116	https://github.com/fossasia/open-event-server/pull/1122	2957	0.3666641714	1001	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	tobymao	sqlglot	Regression of interval parsing	https://github.com/tobymao/sqlglot/issues/1503	https://github.com/tobymao/sqlglot/commit/85b2c0060c579bd5f9f9731b21395b80bf0bc408	5871	0.3664928856	1051	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	EnterpriseDB	barman	Update timestamp format in barman diagnose output	https://github.com/EnterpriseDB/barman/issues/510	https://github.com/EnterpriseDB/barman/commit/1b7c6200f659970e1c9049a8c604719ab2f15131	1904	0.3664519725	2048	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pvlib	pvlib-python	Set leap_day=True as default in pvlib.iotools.get_psm3()	https://github.com/pvlib/pvlib-python/issues/1481	https://github.com/pvlib/pvlib-python/pull/1511	1103	0.3659103637	2784	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pvlib	pvlib-python	Set leap_day=True as default in pvlib.iotools.get_psm3()	https://github.com/pvlib/pvlib-python/issues/1481	https://github.com/pvlib/pvlib-python/pull/1500	1103	0.3659103637	2784	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	Deprecate `utcnow` and `utcfromtimestamp`	https://github.com/python/cpython/issues/103857	https://github.com/python/cpython/pull/103858	60455	0.3657843198	3387	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	wlcrs	huawei_solar	[Bug]: Timestamps don't match	https://github.com/wlcrs/huawei_solar/issues/64	https://github.com/wlcrs/huawei-solar-lib/commit/6edd1dd542057b6e12d1189415bd88f0cd66e241	485	0.3657641248	5521	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	jazzband	django-silk	Proposal: Drop dependency on pytz in favor of zoneinfo	https://github.com/jazzband/django-silk/issues/581	https://github.com/jazzband/django-silk/pull/603	4299	0.3655462775	1026	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	Leap year not working as expected with `'PREFER_DATES_FROM'	https://github.com/scrapinghub/dateparser/issues/693	https://github.com/scrapinghub/dateparser/pull/738	2480	0.3651665565	1509	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	Error condition in _datetimemodule.c is unchecked with `datetime.fromtimestamp` on local times > Y10k	https://github.com/python/cpython/issues/91581	https://github.com/python/cpython/pull/91582	60455	0.3650716359	1443	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	scikit-hep	awkward	ak._v2.from_iter should recognize Python datetimes/timedeltas	https://github.com/scikit-hep/awkward/issues/1701	https://github.com/scikit-hep/awkward/pull/1690	804	0.3637184531	2127	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dsmrreader	dsmr-reader	Support for Daylight Saving Time (DST) transition	https://github.com/dsmrreader/dsmr-reader/issues/104	https://github.com/dsmrreader/dsmr-reader/commit/cb1ac7a14320e8344f145a81cadb594ed9d34c89	458	0.3631457882	2262	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	tobymao	sqlglot	Support for Presto/Trino's interval syntax	https://github.com/tobymao/sqlglot/issues/1410	https://github.com/tobymao/sqlglot/pull/1413	5871	0.3628064018	3449	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Feature proposal: Basic default intervals	https://github.com/sdispater/pendulum/issues/17	https://github.com/sdispater/pendulum/pull/55	6109	0.3622758437	2060	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	dagster-io	dagster	Toggle between UTC and localized for timestamps in Dagit	https://github.com/dagster-io/dagster/issues/5626	https://github.com/dagster-io/dagster/pull/5831	10545	0.3618839699	1354	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	ValueError: tzinfo.utcoffset() returned 1440; must be in -1439 .. 1439	https://github.com/dateutil/dateutil/issues/135	https://github.com/SiCKRAGE/SiCKRAGE/pull/3009	2266	0.3616423078	3534	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	intel-analytics	ipex-llm	Orca `estimator.fit()` with ray backend need the `initial_epoch` parameter	https://github.com/intel-analytics/ipex-llm/issues/7293	https://github.com/intel-analytics/ipex-llm/pull/7375	6150	0.3615697902	2432	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	kennethreitz	maya	Problem computing time ranges using ".intervals()"	https://github.com/kennethreitz/maya/issues/168	https://github.com/ftobia/maya/commit/2c2a8d03c8706cc24f1f45be945e7c4cf139aa43	3407	0.3608071343	1645	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	bentoml	BentoML	model creation time is always utc	https://github.com/bentoml/BentoML/issues/2540	https://github.com/bentoml/BentoML/pull/2572	6721	0.3606871346	3111	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	googleapis	gapic-generator-python	Comparison fails for unit tests with timestamps	https://github.com/googleapis/gapic-generator-python/issues/897	https://github.com/googleapis/gapic-generator-python/pull/898	116	0.359765933	2272	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	popsim-consortium	stdpopsim	non-overlapping intervals error when using annotation	https://github.com/popsim-consortium/stdpopsim/issues/952	https://github.com/popsim-consortium/stdpopsim/pull/949	121	0.3596041393	2170	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	agronholm	apscheduler	CronTrigger Constructor: 'str' object has no attribute 'tzinfo'	https://github.com/agronholm/apscheduler/issues/164	https://github.com/agronholm/apscheduler/commit/87c77c1d077bd107f6a1199d27246127b423d778	5869	0.359516703	1354	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	posit-dev	py-shiny	ui.update_slider doesn't support datetime objects	https://github.com/posit-dev/py-shiny/issues/648	https://github.com/jcheng5/py-shiny/commit/22f89a8e3f11d16b4f2e4f17c2df5e85937617ef	1069	0.3593990845	1036	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sissaschool	xmlschema	dateTime with microseconds and timezone offset problem	https://github.com/sissaschool/xmlschema/issues/85	https://github.com/sissaschool/xmlschema/commit/3c7e4d2577bf002ff92f1252c7ea64a9c88e98de	394	0.3593206894	3909	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ActivityWatch	activitywatch	Start and end of day incorrect for timezone	https://github.com/ActivityWatch/activitywatch/issues/117	https://github.com/ActivityWatch/aw-webui/pull/48	11175	0.3592695375	2275	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sphinx-doc	sphinx	last_updated variable from sphinx build wrongly assumes UTC timezone	https://github.com/sphinx-doc/sphinx/issues/6527	https://github.com/sphinx-doc/sphinx/pull/6528	6140	0.3590514464	4362	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	typeshed	Add weekdays to dateutil.rrule	https://github.com/python/typeshed/issues/7946	https://github.com/srittau/typeshed/commit/427c4c722334085aa3634de11326ff036e0280e8	4139	0.3589372956	1543	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	borgbackup	borg	{utcnow} output isn't correct	https://github.com/borgbackup/borg/issues/4724	https://github.com/borgbackup/borg/pull/6964	10692	0.3587863534	2378	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	home-assistant	supervisor	System log under Hass.io tab always show log entries in UTC time zone	https://github.com/home-assistant/supervisor/issues/638	https://github.com/home-assistant/supervisor/pull/641	1663	0.3578402107	1883	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	facebookresearch	fairseq	Valid On 'valid' subset appears multiple times in the same epoch.	https://github.com/facebookresearch/fairseq/issues/260	https://github.com/facebookresearch/fairseq/commit/c4de6a5ccaa097a9853ea230b9ada9e9e0fdafb7	29583	0.3574610426	1990	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	boto	boto3	EC2 RequestSpotFleet ValidFrom / ValidUntil timestamp issue	https://github.com/boto/boto3/issues/714	https://github.com/jantman/awslimitchecker/commit/a15d0b587ff77905605e502e7f96b8e7a9353603	8783	0.3572022392	6674	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ray-project	ray	[Datasets] Add CI jobs covering major Arrow versions we support.	https://github.com/ray-project/ray/issues/29822	https://github.com/ray-project/ray/pull/29161	31706	0.3569759732	1034	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	PokemonGoF	PokemonGo-Bot	add build timezone args in docker-compose.yml	https://github.com/PokemonGoF/PokemonGo-Bot/issues/4234	https://github.com/PokemonGoF/PokemonGo-Bot/pull/4954	3846	0.3569200243	2346	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	litestar-org	litestar	Bug: test failures where local date different from UTC	https://github.com/litestar-org/litestar/issues/1491	https://github.com/litestar-org/litestar/commit/d114c811edd18ee5895b44cbfd6e54b217126e73	4930	0.356581559	2824	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	something worry in dt.week_of_month	https://github.com/sdispater/pendulum/issues/455	https://github.com/sdispater/pendulum/commit/84497bb2cab964be0a470596e21eade6d64a7846	6109	0.3564831231	1288	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	feast-dev	feast	Missing key error in snowflake_python_type_to_feast_value_type in type_map for numpy datetime64 with timezone	https://github.com/feast-dev/feast/issues/2793	https://github.com/feast-dev/feast/pull/3083	5330	0.3563991807	1155	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	jcrist	msgspec	Support float -> datetime	https://github.com/jcrist/msgspec/issues/448	https://github.com/jcrist/msgspec/pull/452	1972	0.3560096497	5133	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	skarim	vobject	RRULE: Gracefully handle offset-naive and offset-aware datetimes	https://github.com/skarim/vobject/issues/75	https://github.com/skarim/vobject/pull/76	249	0.3556622902	1912	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	`now('US/Pacific')` failing during DST transition	https://github.com/sdispater/pendulum/issues/417	https://github.com/sdispater/pendulum/pull/416	6109	0.3552971282	1383	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	stac-utils	pystac	`pystac.read_file` returns temporal extents with `tzinfo=tzlocal()` depending on the environment.	https://github.com/stac-utils/pystac/issues/819	https://github.com/stac-utils/pystac/pull/848	319	0.3552710527	1331	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	fossasia	open-event-server	Migrate all data in datetime fields to `time-stamp with timezone`	https://github.com/fossasia/open-event-server/issues/3739	https://github.com/fossasia/open-event-server/pull/3708	2957	0.3552290825	3379	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	Canada Holiday Error - Observed Christmas Day	https://github.com/vacanza/python-holidays/issues/581	https://github.com/vacanza/python-holidays/pull/579	1375	0.3548834636	1062	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	fsspec	s3fs	Return offset-aware datetimes	https://github.com/fsspec/s3fs/issues/817	https://github.com/fsspec/s3fs/pull/818	828	0.3540990572	1356	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	CTFd	CTFd	S3 Uploader presigned url timestamp issue	https://github.com/CTFd/CTFd/issues/2431	https://github.com/BrandonIngalls/CTFd/commit/d4e2b5a7edec2fe9123cae24fbf1146b545cfd4f	5394	0.3535450794	4572	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	scrapinghub	dateparser	As soon as settings are provided day/month/year ordering is thrown out	https://github.com/scrapinghub/dateparser/issues/551	https://github.com/kishan3/dateparser/commit/75f69ad7de84aab776518e1883f73438bfe9dedd	2480	0.3532429949	1259	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	PetterKraabol	Twitch-Chat-Downloader	[bug] timestamp formatting ignored now for output?	https://github.com/PetterKraabol/Twitch-Chat-Downloader/issues/33	https://github.com/PetterKraabol/Twitch-Chat-Downloader/commit/bcf5ab4337db1c810f1e99be0143565fb95c6518	641	0.3522986597	1188	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	distributed-system-analysis	pbench	pbench-fio: add epoch time	https://github.com/distributed-system-analysis/pbench/issues/313	https://github.com/distributed-system-analysis/pbench/pull/359	181	0.3510038845	1559	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	O365	python-o365	Problems with Timezones	https://github.com/O365/python-o365/issues/238	https://github.com/O365/python-o365/commit/94f27f6417010b0b9e2b57b9aec74d95d4db7253	1586	0.3509693359	2652	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	catalyst-cooperative	pudl	CEMS UTC offset adjustments in the wrong direction?	https://github.com/catalyst-cooperative/pudl/issues/495	https://github.com/catalyst-cooperative/pudl/commit/36cb2909f3282db8a1da1fb5020fd5e4eaa73f40	453	0.3508750122	1495	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sqlalchemy	sqlalchemy	Interval not using Oracle specified Dialect	https://github.com/sqlalchemy/sqlalchemy/issues/10509	https://github.com/indiVar0508/sqlalchemy/commit/11105386f56a7b4bd476d5718321682638e90ebd	9045	0.350825454	1530	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	intel	cve-bin-tool	refactor: improve explanation of cve year parsing	https://github.com/intel/cve-bin-tool/issues/3131	https://github.com/intel/cve-bin-tool/pull/3132	1128	0.350607844	1986	1	0	0																
	TRUE	FALSE	FALSE	FALSE	TRUE	sdispater	pendulum	ERROR: Failed building wheel for pendulum	https://github.com/sdispater/pendulum/issues/457	https://github.com/Coldcard/ckbunker/pull/5	6109	0.3502532275	24050	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	closeio	ciso8601	Better error handling if pytz is missing	https://github.com/closeio/ciso8601/issues/19	https://github.com/mozilla-services/buildhub/pull/444	557	0.3502444482	2802	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	apache	airflow	AssertionError: next schedule shouldn't be earlier around DST change	https://github.com/apache/airflow/issues/30088	https://github.com/apache/airflow/pull/30083	35031	0.3502145344	4363	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	ibis-project	ibis	bug: interval addition/subtraction should upcast to smallest unit	https://github.com/ibis-project/ibis/issues/6139	https://github.com/mesejo/ibis/commit/6c5498948d1bf4229b6a83e965d33228da806521	4407	0.3501134779	1365	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python-discord	sir-lancebot	Hacktoberstats GH Query Timezone Incorrect	https://github.com/python-discord/sir-lancebot/issues/282	https://github.com/python-discord/sir-lancebot/pull/285	238	0.3497722385	1789	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	Mause	duckdb_engine	[Bug]: `INTERVAL` Columns compile to `TIMESTAMP WITHOUT TIME ZONE`	https://github.com/Mause/duckdb_engine/issues/1004	https://github.com/Mause/duckdb_engine/pull/1007	290	0.3492523214	1552	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ArchiveBox	ArchiveBox	Bugfix: Inconsistent timezones in output	https://github.com/ArchiveBox/ArchiveBox/issues/428	https://github.com/ArchiveBox/ArchiveBox/pull/435	20148	0.3491203667	1215	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic	timedelta_isoformat does not produce correct string in some cases	https://github.com/pydantic/pydantic/issues/3899	https://github.com/pydantic/pydantic/pull/3909	19350	0.348284892	1498	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	yukinarit	pyserde	Provide a way to disable `datetime` being converted to `str`	https://github.com/yukinarit/pyserde/issues/483	https://github.com/yukinarit/pyserde/pull/486	669	0.3477063171	1844	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	vacanza	python-holidays	US Presidential Inauguration Day	https://github.com/vacanza/python-holidays/issues/6	https://github.com/vacanza/python-holidays/commit/d1ba8b6a0ccc68ffc7ea654392f60f8ff3c53ca5	1375	0.3476333004	1508	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	irmen	Pyro5	datetime not deserialized	https://github.com/irmen/Pyro5/issues/27	https://github.com/irmen/Pyro5/commit/f1b04414c1bc9ab2d496308394ec5d5bdb844378	299	0.3473086941	1792	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic	datetime dumping to json flips sign of timezone	https://github.com/pydantic/pydantic/issues/8964	https://github.com/pydantic/speedate/pull/56	19350	0.3472386611	1914	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	FreeOpcUa	python-opcua	XML serialization of DateTime value attribute emits invalid text representation	https://github.com/FreeOpcUa/python-opcua/issues/1343	https://github.com/ChUnterberger/python-opcua/commit/c4b8fa5eb7ec0252d1760cb4fe1beed3d5ff6d43	1320	0.3469312429	1933	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Error dividing duration by float	https://github.com/sdispater/pendulum/issues/525	https://github.com/sdispater/pendulum/pull/593	6109	0.3467072686	3231	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	apache	airflow	`pendulum.DateTime` objects now being serialized as python objects with non-standard timezones	https://github.com/apache/airflow/issues/34483	https://github.com/apache/airflow/pull/34492	35031	0.3463503495	17033	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	Infinidat	infi.clickhouse_orm	Support for more datetime formats	https://github.com/Infinidat/infi.clickhouse_orm/issues/43	https://github.com/Infinidat/infi.clickhouse_orm/pull/55	405	0.3460011106	2135	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	PostHog	posthog	Trends date buckets may be incorrect for non-utc timezones	https://github.com/PostHog/posthog/issues/11492	https://github.com/PostHog/posthog/pull/11468	18958	0.3458038039	3576	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	borgbackup	borg	JSON: Use a more standard, timezone-aware format date time format	https://github.com/borgbackup/borg/issues/2376	https://github.com/borgbackup/borg/pull/2916	10692	0.3456192031	1883	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Incorrect timezone during PDT -> PST Switch	https://github.com/dateutil/dateutil/issues/57	https://github.com/dateutil/dateutil/pull/127	2266	0.3453713283	15000	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ClickHouse	clickhouse-connect	Timezone info is not present in the result when querying with `columns_tzs` or `query_tz`	https://github.com/ClickHouse/clickhouse-connect/issues/210	https://github.com/ClickHouse/clickhouse-connect/pull/218	272	0.3445132096	2699	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ietf-tools	datatracker	enforce "important-dates" deadlines in UTC	https://github.com/ietf-tools/datatracker/issues/4436	https://github.com/ietf-tools/datatracker/pull/4612	516	0.3444667089	2692	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	secdev	scapy	Nanosecond libpcap	https://github.com/secdev/scapy/issues/195	https://github.com/secdev/scapy/pull/412	10220	0.3437175262	1007	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	open-mmlab	mmhuman3d	`convert_kps` may have missed some considerations when  `src==dst`	https://github.com/open-mmlab/mmhuman3d/issues/181	https://github.com/open-mmlab/mmhuman3d/pull/183	1148	0.3423915752	1120	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	evennia	evennia	Bug in gametime.real_seconds_until	https://github.com/evennia/evennia/issues/1833	https://github.com/evennia/evennia/pull/1834	1735	0.3420404825	1100	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	Add `datetime.UTC` alias for `datetime.timezone.utc`	https://github.com/python/cpython/issues/91928	https://github.com/python/cpython/pull/91973	60455	0.3420202228	1514	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	hugovk	pypistats	ValueError: month must be in 1..12	https://github.com/hugovk/pypistats/issues/40	https://github.com/hugovk/pypistats/pull/41	189	0.3419478803	1451	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	airbytehq	airbyte	🎉 Source Postgres: Describe timezone awareness	https://github.com/airbytehq/airbyte/issues/12905	https://github.com/airbytehq/airbyte/pull/13166	14568	0.3417576667	1292	1	1	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	catalyst-cooperative	pudl	Address df.astype() timezone conversion warnings	https://github.com/catalyst-cooperative/pudl/issues/1423	https://github.com/catalyst-cooperative/pudl/pull/1421	453	0.3415718968	1974	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	snowflakedb	snowflake-connector-python	SNOW-889806: Timezone is discarded when reading from Parquet files	https://github.com/snowflakedb/snowflake-connector-python/issues/1688	https://github.com/snowflakedb/snowflake-connector-python/pull/1706	565	0.3414021745	5799	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	tasmota	decode-config	Command option - TimeZone command is not proper	https://github.com/tasmota/decode-config/issues/66	https://github.com/tasmota/decode-config/commit/ad8b784ec61ad7c77d3fdd9ecd792ab43d22629f	202	0.3410354189	1504	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	flopp	GpxTrackPoster	Incorrect case of month names	https://github.com/flopp/GpxTrackPoster/issues/50	https://github.com/flopp/GpxTrackPoster/pull/65	404	0.3402422865	3234	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Negative "week_of_month" Values	https://github.com/sdispater/pendulum/issues/536	https://github.com/sdispater/pendulum/commit/84497bb2cab964be0a470596e21eade6d64a7846	6109	0.3402317942	2548	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	sqlalchemy	sqlalchemy	exception with updates when using onupdate=func.current_timestamp() with Postgres	https://github.com/sqlalchemy/sqlalchemy/issues/275	https://github.com/optuna/optuna/pull/2190	9045	0.339729357	7550	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	samuelcolvin	arq	Timezone support for cron jobs	https://github.com/samuelcolvin/arq/issues/351	https://github.com/samuelcolvin/arq/pull/354	1993	0.3394610248	2179	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	googleapis	python-bigquery-pandas	tests.system.test_read_gbq: test_default_dtypes[issue365-extreme-datetimes-True] failed	https://github.com/googleapis/python-bigquery-pandas/issues/623	https://github.com/googleapis/python-bigquery-pandas/pull/627	425	0.3393917452	46971	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sibson	redbeat	Tasks are running twice - potential solution: use pytz.timezone.localize instead of tzinfo in datetime	https://github.com/sibson/redbeat/issues/160	https://github.com/sibson/redbeat/pull/161	886	0.3392435392	3390	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	bellingcat	ShadowFinder	Daylight Savings behaviour is not tested	https://github.com/bellingcat/ShadowFinder/issues/10	https://github.com/bellingcat/ShadowFinder/pull/12	153	0.3387901021	2355	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	aropan	clist	Fails to detect timezone in Japan	https://github.com/aropan/clist/issues/92	https://github.com/aropan/clist/pull/93	320	0.3384304572	1068	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	insightindustry	sqlathanor	Another issue deserializing Interval	https://github.com/insightindustry/sqlathanor/issues/80	https://github.com/insightindustry/sqlathanor/commit/c0e526bcecb1b324acff808870aba8d5ce3cb576	111	0.3383306626	4483	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	COMPAT: dateutil 2.2/2.3 on linux 3.17	https://github.com/dateutil/dateutil/issues/8	https://github.com/jlec/pandas/commit/2406642707f67310bd1c987d678c1c8488b1a134	2266	0.33742747	1748	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	_DatetimeWithFold needs a nanosecond attribute for Pandas compatibility	https://github.com/dateutil/dateutil/issues/941	https://github.com/dateutil/dateutil/pull/940	2266	0.3373620455	1240	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Sensible defaults for tzinfos	https://github.com/dateutil/dateutil/issues/575	https://github.com/dateutil/dateutil/pull/540	2266	0.33733203	9136	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	PostHog	posthog	Bug Report: SQL product analytics date filters uses UTC instead of project/device timezone	https://github.com/PostHog/posthog/issues/21673	https://github.com/PostHog/posthog/pull/21677	18958	0.3365530013	1533	1	0	1																
	TRUE	FALSE	FALSE	FALSE	TRUE	googleapis	google-cloud-python	Review the datetime helpers in gcloud._helpers.	https://github.com/googleapis/google-cloud-python/issues/1732	https://github.com/googleapis/google-cloud-python/pull/1691	4704	0.3363890412	6330	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	raphaelm	python-sepaxml	Improvement: `utils.make_msg_id` uses `time` but `_create_header` uses `datetime`	https://github.com/raphaelm/python-sepaxml/issues/39	https://github.com/raphaelm/python-sepaxml/pull/40	108	0.3363810226	1020	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	RFC822 timestamp using GMT is parsed into BST if local time is UK time	https://github.com/dateutil/dateutil/issues/318	https://github.com/dateutil/dateutil/pull/319	2266	0.3362873909	2301	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	mozilla	experimenter	Enrollment can be longer than entire experiment duration for Nimbus experiments	https://github.com/mozilla/experimenter/issues/6114	https://github.com/mozilla/experimenter/commit/6bc20bc0b276f79eb9f372bf61e7d4f129648462	114	0.3356267774	1367	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pytest-dev	pytest	compare datetime objects with pytest.approx	https://github.com/pytest-dev/pytest/issues/4736	https://github.com/pytest-dev/pytest/pull/4760	11544	0.3353385899	3697	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	lukearran	TvTimeToTrakt	ValueError: year 0 is out of range when importing Movies	https://github.com/lukearran/TvTimeToTrakt/issues/51	https://github.com/lukearran/TvTimeToTrakt/pull/53	126	0.3351426099	1281	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	karlicoss	HPI	Think about abandoning timezone abbreviations map in my.core.time	https://github.com/karlicoss/HPI/issues/103	https://github.com/karlicoss/HPI/commit/20493defd6a1886986c52af2c1eb8b6433739bd3	1412	0.3346653125	1895	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	googleapis	python-bigquery-pandas	tests.system.test_read_gbq: test_default_dtypes[issue365-extreme-datetimes-False] failed	https://github.com/googleapis/python-bigquery-pandas/issues/624	https://github.com/googleapis/python-bigquery-pandas/pull/627	425	0.3341805684	47238	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	aws	aws-sdk-pandas	Timezone being interpreted incorrectly	https://github.com/aws/aws-sdk-pandas/issues/444	https://github.com/aws/aws-sdk-pandas/commit/6c34c7a7251346c9a45089e25c06fcaddf89c394	3834	0.3340825361	3497	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	edgedb	edgedb	large microsecond durations don't work	https://github.com/edgedb/edgedb/issues/2191	https://github.com/edgedb/edgedb/commit/937ef17483c3588b3c52b49fb3652d1bc0a8f089	12712	0.3339078872	1186	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	lucyparsons	OpenOversight	Set `timestamp` columns in the database to `timestamptz`	https://github.com/lucyparsons/OpenOversight/issues/323	https://github.com/lucyparsons/OpenOversight/pull/310	233	0.3333962219	1007	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pretix	pretix	Event time with timezone	https://github.com/pretix/pretix/issues/428	https://github.com/pretix/pretix/pull/432	1732	0.3333268604	3628	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	comtravo	ctparse	The duration of "1 hour and 42 minutes" returns just 42 minutes, debug returns the values correctly	https://github.com/comtravo/ctparse/issues/102	https://github.com/comtravo/ctparse/commit/dbb6626923f9f537b165c93f6761f251e012d8bd	130	0.3327237001	1708	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	xcube-dev	xcube	Avoid using timezone-aware indexers on timezone-naive arrays	https://github.com/xcube-dev/xcube/issues/605	https://github.com/xcube-dev/xcube/commit/2bf1bea484ec33ff121461aa06a2390ebab1465f	177	0.3326370471	5068	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	snowflakedb	snowflake-connector-python	SNOW-889573: write_pandas incorrectly writes timestamp_tz	https://github.com/snowflakedb/snowflake-connector-python/issues/1687	https://github.com/dvorst/snowflake-connector-python/commit/0dedbeeabfa32e068bec9bd31c80f879d32d967d	565	0.3324224044	11241	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	cpython	Error in example of `datetime.time.fromisoformat`	https://github.com/python/cpython/issues/112925	https://github.com/python/cpython/pull/112931	60455	0.3321179659	1117	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ibis-project	ibis	bug(bigquery): `TIMESTAMP` is unconditionally used for timestamp literals, even when lacking a timezone	https://github.com/ibis-project/ibis/issues/7233	https://github.com/ibis-project/ibis/pull/7234	4407	0.3312589825	2125	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	Rapptz	discord.py	Message.created_at returns datetime.datetime object without timezone info	https://github.com/Rapptz/discord.py/issues/5921	https://github.com/dronefly-garden/dronefly/commit/ac4ebb567fa9c8aba71b74a255df1351aa62b277	14432	0.3311052008	3829	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ibis-project	ibis	Milliseconds extraction problem in duckdb (and possibly, postgres)	https://github.com/ibis-project/ibis/issues/4054	https://github.com/ibis-project/ibis/pull/4055	4407	0.3305887465	2634	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	jazzband	djangorestframework-simplejwt	Unsupported type for timedelta seconds component	https://github.com/jazzband/djangorestframework-simplejwt/issues/553	https://github.com/jazzband/djangorestframework-simplejwt/pull/554	3867	0.3298307361	1450	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	airbytehq	airbyte	`JdbcSourceOperations` method `setJsonField` misses a branch for `TIMESTAMP_WITH_TIMEZONE`	https://github.com/airbytehq/airbyte/issues/16838	https://github.com/airbytehq/airbyte/pull/19860	14568	0.3296258237	2106	1	1	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	lemon24	reader	Use timezone-aware datetimes everywhere in the public API	https://github.com/lemon24/reader/issues/233	https://github.com/lemon24/reader/commit/994344a60e2031a46fb7843cf4980bc11afd93f7	421	0.3293497621	2168	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	openfun	marsha	Set xAPI timestamp property in the backend	https://github.com/openfun/marsha/issues/536	https://github.com/openfun/marsha/pull/572	104	0.3284086196	1024	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	FreeOpcUa	opcua-asyncio	DateTime encoding	https://github.com/FreeOpcUa/opcua-asyncio/issues/1155	https://github.com/FreeOpcUa/opcua-asyncio/pull/1157	1020	0.3279767063	2106	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	gwu-libraries	sfm-ui	Include timezones on Harvest detail	https://github.com/gwu-libraries/sfm-ui/issues/456	https://github.com/gwu-libraries/sfm-ui/pull/549	151	0.3275708962	1315	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	cdown	srt	timedelta max days must be limited to avoid OverflowError	https://github.com/cdown/srt/issues/10	https://github.com/cdown/srt/commit/c6b6eb0d7e79cecf506510011526a5642befe9aa	440	0.3267921267	1850	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pydantic	pydantic-core	Error pickling pydantic-core internal `TzInfo` type	https://github.com/pydantic/pydantic-core/issues/589	https://github.com/pydantic/pydantic-core/pull/770	1309	0.3267790645	1451	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	vinteo	hass-opensprinkler	Last run sensor time seems to be off due to timezones	https://github.com/vinteo/hass-opensprinkler/issues/89	https://github.com/vinteo/hass-opensprinkler/pull/114	189	0.326635393	3357	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	mozilla	experimenter	Wrong day name in dateUtils.test.ts const	https://github.com/mozilla/experimenter/issues/6014	https://github.com/mozilla/experimenter/commit/9b1b1a917c6d6d12f9762b0ec6ca4d15446eb1a2	114	0.3260640931	1004	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ccxt	ccxt	Wrong datetime for exchanges for hitbtc2 & coinbase	https://github.com/ccxt/ccxt/issues/3984	https://github.com/satoshinakamoto007/ccxt/pull/255	31719	0.3241478412	1056	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	stac-utils	stac-fastapi	Issues with Search datetime parameter parsing - blank start or end range and lowercase t or z	https://github.com/stac-utils/stac-fastapi/issues/161	https://github.com/stac-utils/stac-fastapi/pull/368	221	0.3227180161	2791	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dateutil	dateutil	Inconsistent equality test around DST change with shared tzfile	https://github.com/dateutil/dateutil/issues/338	https://github.com/man-group/arctic/pull/305	2266	0.322606643	3567	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	hardbyte	python-can	send_periodic with non-None duration sends one extra message before stopping	https://github.com/hardbyte/python-can/issues/1710	https://github.com/hardbyte/python-can/pull/1713	1198	0.3225168703	3621	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	log2timeline	plaso	Windows timezone preprocessor doesn't detect timezone correctly	https://github.com/log2timeline/plaso/issues/723	https://github.com/log2timeline/plaso/commit/f69eb61cd432b05bc3358509143c973d133d8abe	1649	0.3223200605	1234	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	tobymao	sqlglot	ClickHouse doesn't allow plurals for interval units	https://github.com/tobymao/sqlglot/issues/2448	https://github.com/tobymao/sqlglot/pull/2451	5871	0.3221458016	2149	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pm4py	pm4py-core	Performing duration statistitics	https://github.com/pm4py/pm4py-core/issues/180	https://github.com/pm4py/pm4py-core/commit/fb0d9fb049f128bd979c962db54e3a305ecf5f09	673	0.3217032213	2411	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	freqtrade	freqtrade	Check fails if computer running check is not UTC	https://github.com/freqtrade/freqtrade/issues/4532	https://github.com/freqtrade/freqtrade/pull/4540	26072	0.321674176	1937	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	cyberjunky	home-assistant-garmin_connect	sensor.next_alarm_time (wrongly?) assumes UTC	https://github.com/cyberjunky/home-assistant-garmin_connect/issues/60	https://github.com/cyberjunky/home-assistant-garmin_connect/pull/61	206	0.3209212486	1692	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sdispater	pendulum	Averages don't take into account milliseconds	https://github.com/sdispater/pendulum/issues/137	https://github.com/ericfrederich/pendulum/commit/8070ab4d86e6c022ed40ccad0c7abee83c253599	6109	0.3206303524	1519	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	ray-project	ray	Timezone aware datetime objects lose timezone information through Ray	https://github.com/ray-project/ray/issues/2605	https://github.com/ray-project/ray/pull/2577	31706	0.3201696895	2514	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ecederstrand	exchangelib	Cannot convert _start_timezone	https://github.com/ecederstrand/exchangelib/issues/273	https://github.com/ecederstrand/exchangelib/commit/89c19dbabff27da4ffaa37bafa20f065a9f97f9c	1140	0.3196137787	7194	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ccxt	ccxt	Loss of precision with bittrex timestamps	https://github.com/ccxt/ccxt/issues/535	https://github.com/ccxt/ccxt/commit/51fab1e7eb4196a760c74e962fa25b7c552e4fc0	31719	0.3194937825	1458	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	sentinel-hub	eo-learn	Adding DEMWCSInput to an existing patch overrides the DATA timestamps	https://github.com/sentinel-hub/eo-learn/issues/22	https://github.com/sentinel-hub/eo-learn/pull/24	1085	0.3194892869	6521	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	alpacahq	alpaca-backtrader-api	tzinfo error with version 0.10.0	https://github.com/alpacahq/alpaca-backtrader-api/issues/107	https://github.com/alpacahq/alpaca-backtrader-api/pull/108	596	0.3182586305	1049	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	alteryx	featuretools	featuretools doesn't like datetime64[ns, UTC]	https://github.com/alteryx/featuretools/issues/300	https://github.com/alteryx/featuretools/pull/342	7097	0.3182110642	1182	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	seperman	deepdiff	compare datetime.date as numbers	https://github.com/seperman/deepdiff/issues/331	https://github.com/seperman/deepdiff/pull/401	1933	0.3181402684	2183	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	jcrist	msgspec	Can't use enc_hook to fix naive datetimes	https://github.com/jcrist/msgspec/issues/152	https://github.com/jcrist/msgspec/pull/163	1972	0.3169472487	1787	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	TailorDev	Watson	Breaking changes with arrow 1.0.0	https://github.com/TailorDev/Watson/issues/407	https://github.com/veganjay/Watson/commit/e9097c53aadca48d24cf214753613fe22b78fa1b	2402	0.3164261835	4367	1	1	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	MatthiasValvekens	pyHanko	Test fail if no timezone is set on system	https://github.com/MatthiasValvekens/pyHanko/issues/256	https://github.com/MatthiasValvekens/pyHanko/commit/7caca7c7a0434d9400049847aea747a89743be87	453	0.3161394171	3519	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ecederstrand	exchangelib	Unable to process Amazon WorkMail server timezone data	https://github.com/ecederstrand/exchangelib/issues/1058	https://github.com/cygnus9/exchangelib/commit/66f50cd009b7ece9bc0455b35307512fb0e5b7dd	1140	0.3158666384	4356	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ibis-project	ibis	SET LOCAL TIMEZONE = UTC') causes crash on Redshift with postgres driver	https://github.com/ibis-project/ibis/issues/1158	https://github.com/ibis-project/ibis/pull/1163	4407	0.3157267903	1289	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ccxt	ccxt	Huobi watchBalance results in undefined timestamp	https://github.com/ccxt/ccxt/issues/19812	https://github.com/ccxt/ccxt/pull/19836	31719	0.3156303131	1761	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	bit-team	backintime	YEAR missing in common.config.Config.SCHEDULE_MODES	https://github.com/bit-team/backintime/issues/1023	https://github.com/bit-team/backintime/commit/90c5a0840c13c2e78d3ff9309d6159667f7a9e10	1887	0.3151284261	1574	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	apache	airflow	Several statsd timers record seconds rather than milliseconds	https://github.com/apache/airflow/issues/10629	https://github.com/apache/airflow/pull/10632	35031	0.3148881253	1259	1	0	1																
	FALSE	FALSE	FALSE	FALSE	FALSE	ceph	ceph-ansible	Should ceph-ansible fail as packages for ceph-nfs are missing on openSUSE Leap 15.1?	https://github.com/ceph/ceph-ansible/issues/4342	https://github.com/johanneskastl/ceph-ansible/commit/bca5cd3f523e4f422317f4e25572cbabbb3c9103	1647	0.3146297173	2332	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	ray-project	ray	[Jobs] Timestamp field switches between seconds and milliseconds	https://github.com/ray-project/ray/issues/16452	https://github.com/ray-project/ray/pull/16455	31706	0.3145055766	2287	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	HandyHat	ha-hildebrandglow-dcc	Aggregate Week and Month Values? (Improvement)	https://github.com/HandyHat/ha-hildebrandglow-dcc/issues/110	https://github.com/HandyHat/ha-hildebrandglow-dcc/pull/282	225	0.3144573443	2363	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	robotframework	robotframework	DateTime: Default timestamp can contain `.1000` milliseconds while it should only use three digit precision	https://github.com/robotframework/robotframework/issues/1764	https://github.com/robotframework/robotframework/commit/f9da586f24c0aa809748b1c85b0077cbd30849ff	9279	0.314439767	4182	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	pandas-dev	pandas-stubs	Unsupported operand types for > ("Series[Any]" and "Timedelta")	https://github.com/pandas-dev/pandas-stubs/issues/175	https://github.com/pandas-dev/pandas-stubs/pull/176	217	0.3142644146	1142	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	python	typeshed	python-dateutil parserinfo attributes	https://github.com/python/typeshed/issues/6682	https://github.com/python/typeshed/pull/6689	4139	0.3129172549	1159	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	dsmrreader	dsmr-reader	Trends are always shown in UTC	https://github.com/dsmrreader/dsmr-reader/issues/76	https://github.com/dsmrreader/dsmr-reader/commit/064dc2827d54a61c23afc5aff92e6e8c241461e1	458	0.3124293183	1873	1	0	0																
	TRUE	FALSE	FALSE	FALSE	FALSE	MagicStack	asyncpg	Cannot write sdispater/Pendulum objects as timestamptz	https://github.com/MagicStack/asyncpg/issues/71	https://github.com/sdispater/pendulum/pull/93	6701	0.3122634642	4142	1	0	0		Timestamps	Timezone	Library Conversions	Timezone Conversions	Timestamp/Hash Construction	Low	Medium	Medium	Low		Adding Support for New Libraries			Specific	
	FALSE	FALSE	FALSE	FALSE	FALSE	mymarilyn	clickhouse-driver	avoid unnecessary timezone conversion when use_numpy=True	https://github.com/mymarilyn/clickhouse-driver/issues/354	https://github.com/edwinwzhe/clickhouse-driver/commit/2d555e40e9066c9da293f97561f3b51ea7eb1f6e	1175	0.3117642472	1428	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE	kitzeslab	opensoundscape	failing to parse UTC-5 timezone in metadata	https://github.com/kitzeslab/opensoundscape/issues/457	https://github.com/kitzeslab/opensoundscape/commit/d62e3a0443071bc26c34e7e491daa92a2c8b0a7a	124	0.3116806205	1707	1	0	0																
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											
	FALSE	FALSE	FALSE	FALSE	FALSE																											